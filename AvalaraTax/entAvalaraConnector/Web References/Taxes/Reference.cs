//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Avalara.Taxes {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Taxes_Binding", Namespace="urn:microsoft-dynamics-schemas/page/taxes")]
    public partial class Taxes_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_TaxesLinesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Taxes_Service() {
            this.Url = global::Avalara.Properties.Settings.Default.entAvalaraConnector_Taxes_Taxes_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;
        
        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;
        
        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;
        
        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;
        
        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event CreateMultipleCompletedEventHandler CreateMultipleCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event Delete_TaxesLinesCompletedEventHandler Delete_TaxesLinesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:Read", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="Read_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Taxes")]
        public Taxes Read(string Tipo, string No) {
            object[] results = this.Invoke("Read", new object[] {
                        Tipo,
                        No});
            return ((Taxes)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAsync(string Tipo, string No) {
            this.ReadAsync(Tipo, No, null);
        }
        
        /// <remarks/>
        public void ReadAsync(string Tipo, string No, object userState) {
            if ((this.ReadOperationCompleted == null)) {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                        Tipo,
                        No}, this.ReadOperationCompleted, userState);
        }
        
        private void OnReadOperationCompleted(object arg) {
            if ((this.ReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:ReadByRecId", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="ReadByRecId_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Taxes")]
        public Taxes ReadByRecId(string recId) {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                        recId});
            return ((Taxes)(results[0]));
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId) {
            this.ReadByRecIdAsync(recId, null);
        }
        
        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState) {
            if ((this.ReadByRecIdOperationCompleted == null)) {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                        recId}, this.ReadByRecIdOperationCompleted, userState);
        }
        
        private void OnReadByRecIdOperationCompleted(object arg) {
            if ((this.ReadByRecIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:ReadMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="ReadMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Taxes[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] Taxes_Filter[] filter, string bookmarkKey, int setSize) {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize});
            return ((Taxes[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(Taxes_Filter[] filter, string bookmarkKey, int setSize) {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }
        
        /// <remarks/>
        public void ReadMultipleAsync(Taxes_Filter[] filter, string bookmarkKey, int setSize, object userState) {
            if ((this.ReadMultipleOperationCompleted == null)) {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                        filter,
                        bookmarkKey,
                        setSize}, this.ReadMultipleOperationCompleted, userState);
        }
        
        private void OnReadMultipleOperationCompleted(object arg) {
            if ((this.ReadMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:IsUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="IsUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key) {
            object[] results = this.Invoke("IsUpdated", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key) {
            this.IsUpdatedAsync(Key, null);
        }
        
        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState) {
            if ((this.IsUpdatedOperationCompleted == null)) {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                        Key}, this.IsUpdatedOperationCompleted, userState);
        }
        
        private void OnIsUpdatedOperationCompleted(object arg) {
            if ((this.IsUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:GetRecIdFromKey", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="GetRecIdFromKey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key) {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key) {
            this.GetRecIdFromKeyAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState) {
            if ((this.GetRecIdFromKeyOperationCompleted == null)) {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                        Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }
        
        private void OnGetRecIdFromKeyOperationCompleted(object arg) {
            if ((this.GetRecIdFromKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:Create", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="Create_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Create(ref Taxes Taxes) {
            object[] results = this.Invoke("Create", new object[] {
                        Taxes});
            Taxes = ((Taxes)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync(Taxes Taxes) {
            this.CreateAsync(Taxes, null);
        }
        
        /// <remarks/>
        public void CreateAsync(Taxes Taxes, object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[] {
                        Taxes}, this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:CreateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="CreateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref Taxes[] Taxes_List) {
            object[] results = this.Invoke("CreateMultiple", new object[] {
                        Taxes_List});
            Taxes_List = ((Taxes[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(Taxes[] Taxes_List) {
            this.CreateMultipleAsync(Taxes_List, null);
        }
        
        /// <remarks/>
        public void CreateMultipleAsync(Taxes[] Taxes_List, object userState) {
            if ((this.CreateMultipleOperationCompleted == null)) {
                this.CreateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMultipleOperationCompleted);
            }
            this.InvokeAsync("CreateMultiple", new object[] {
                        Taxes_List}, this.CreateMultipleOperationCompleted, userState);
        }
        
        private void OnCreateMultipleOperationCompleted(object arg) {
            if ((this.CreateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMultipleCompleted(this, new CreateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:Update", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="Update_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref Taxes Taxes) {
            object[] results = this.Invoke("Update", new object[] {
                        Taxes});
            Taxes = ((Taxes)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(Taxes Taxes) {
            this.UpdateAsync(Taxes, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(Taxes Taxes, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        Taxes}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:UpdateMultiple", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="UpdateMultiple_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ref Taxes[] Taxes_List) {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                        Taxes_List});
            Taxes_List = ((Taxes[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(Taxes[] Taxes_List) {
            this.UpdateMultipleAsync(Taxes_List, null);
        }
        
        /// <remarks/>
        public void UpdateMultipleAsync(Taxes[] Taxes_List, object userState) {
            if ((this.UpdateMultipleOperationCompleted == null)) {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                        Taxes_List}, this.UpdateMultipleOperationCompleted, userState);
        }
        
        private void OnUpdateMultipleOperationCompleted(object arg) {
            if ((this.UpdateMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:Delete", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="Delete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_Result")]
        public bool Delete(string Key) {
            object[] results = this.Invoke("Delete", new object[] {
                        Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key) {
            this.DeleteAsync(Key, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string Key, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        Key}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/taxes:Delete_TaxesLines", RequestNamespace="urn:microsoft-dynamics-schemas/page/taxes", ResponseElementName="Delete_TaxesLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/page/taxes", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Delete_TaxesLines_Result")]
        public bool Delete_TaxesLines(string TaxesLines_Key) {
            object[] results = this.Invoke("Delete_TaxesLines", new object[] {
                        TaxesLines_Key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_TaxesLinesAsync(string TaxesLines_Key) {
            this.Delete_TaxesLinesAsync(TaxesLines_Key, null);
        }
        
        /// <remarks/>
        public void Delete_TaxesLinesAsync(string TaxesLines_Key, object userState) {
            if ((this.Delete_TaxesLinesOperationCompleted == null)) {
                this.Delete_TaxesLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_TaxesLinesOperationCompleted);
            }
            this.InvokeAsync("Delete_TaxesLines", new object[] {
                        TaxesLines_Key}, this.Delete_TaxesLinesOperationCompleted, userState);
        }
        
        private void OnDelete_TaxesLinesOperationCompleted(object arg) {
            if ((this.Delete_TaxesLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_TaxesLinesCompleted(this, new Delete_TaxesLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/taxes")]
    public partial class Taxes {
        
        private string keyField;
        
        private Tipo tipoField;
        
        private bool tipoFieldSpecified;
        
        private string noField;
        
        private string customerCodeField;
        
        private System.DateTime docDateField;
        
        private bool docDateFieldSpecified;
        
        private string currencyCodeField;
        
        private string shipFromLine1Field;
        
        private string shipFromLine2Field;
        
        private string shipFromLine3Field;
        
        private string shipFromCityField;
        
        private string shipFromRegionField;
        
        private string shipFromPostCodeField;
        
        private string shipFromCountryField;
        
        private string shipToLine1Field;
        
        private string shipToLine2Field;
        
        private string shipToLine3Field;
        
        private string shipToCityField;
        
        private string shipToRegionField;
        
        private string shipToPostCodeField;
        
        private string shipToCountryField;
        
        private decimal impuestoField;
        
        private bool impuestoFieldSpecified;
        
        private System.DateTime fecha_respuestaField;
        
        private bool fecha_respuestaFieldSpecified;
        
        private bool procesado_respuestaField;
        
        private bool procesado_respuestaFieldSpecified;
        
        private string descripcionErrorField;
        
        private string descripcionError2Field;
        
        private string descripcionError3Field;
        
        private Accion accionField;
        
        private bool accionFieldSpecified;
        
        private ImpuestosLineas[] taxesLinesField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public Tipo Tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TipoSpecified {
            get {
                return this.tipoFieldSpecified;
            }
            set {
                this.tipoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerCode {
            get {
                return this.customerCodeField;
            }
            set {
                this.customerCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime DocDate {
            get {
                return this.docDateField;
            }
            set {
                this.docDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocDateSpecified {
            get {
                return this.docDateFieldSpecified;
            }
            set {
                this.docDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromLine1 {
            get {
                return this.shipFromLine1Field;
            }
            set {
                this.shipFromLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromLine2 {
            get {
                return this.shipFromLine2Field;
            }
            set {
                this.shipFromLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromLine3 {
            get {
                return this.shipFromLine3Field;
            }
            set {
                this.shipFromLine3Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromCity {
            get {
                return this.shipFromCityField;
            }
            set {
                this.shipFromCityField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromRegion {
            get {
                return this.shipFromRegionField;
            }
            set {
                this.shipFromRegionField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromPostCode {
            get {
                return this.shipFromPostCodeField;
            }
            set {
                this.shipFromPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromCountry {
            get {
                return this.shipFromCountryField;
            }
            set {
                this.shipFromCountryField = value;
            }
        }
        
        /// <remarks/>
        public string ShipToLine1 {
            get {
                return this.shipToLine1Field;
            }
            set {
                this.shipToLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipToLine2 {
            get {
                return this.shipToLine2Field;
            }
            set {
                this.shipToLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipToLine3 {
            get {
                return this.shipToLine3Field;
            }
            set {
                this.shipToLine3Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipToCity {
            get {
                return this.shipToCityField;
            }
            set {
                this.shipToCityField = value;
            }
        }
        
        /// <remarks/>
        public string ShipToRegion {
            get {
                return this.shipToRegionField;
            }
            set {
                this.shipToRegionField = value;
            }
        }
        
        /// <remarks/>
        public string ShipToPostCode {
            get {
                return this.shipToPostCodeField;
            }
            set {
                this.shipToPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShipToCountry {
            get {
                return this.shipToCountryField;
            }
            set {
                this.shipToCountryField = value;
            }
        }
        
        /// <remarks/>
        public decimal Impuesto {
            get {
                return this.impuestoField;
            }
            set {
                this.impuestoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImpuestoSpecified {
            get {
                return this.impuestoFieldSpecified;
            }
            set {
                this.impuestoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Fecha_respuesta {
            get {
                return this.fecha_respuestaField;
            }
            set {
                this.fecha_respuestaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Fecha_respuestaSpecified {
            get {
                return this.fecha_respuestaFieldSpecified;
            }
            set {
                this.fecha_respuestaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Procesado_respuesta {
            get {
                return this.procesado_respuestaField;
            }
            set {
                this.procesado_respuestaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Procesado_respuestaSpecified {
            get {
                return this.procesado_respuestaFieldSpecified;
            }
            set {
                this.procesado_respuestaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DescripcionError {
            get {
                return this.descripcionErrorField;
            }
            set {
                this.descripcionErrorField = value;
            }
        }
        
        /// <remarks/>
        public string DescripcionError2 {
            get {
                return this.descripcionError2Field;
            }
            set {
                this.descripcionError2Field = value;
            }
        }
        
        /// <remarks/>
        public string DescripcionError3 {
            get {
                return this.descripcionError3Field;
            }
            set {
                this.descripcionError3Field = value;
            }
        }
        
        /// <remarks/>
        public Accion Accion {
            get {
                return this.accionField;
            }
            set {
                this.accionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccionSpecified {
            get {
                return this.accionFieldSpecified;
            }
            set {
                this.accionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ImpuestosLineas[] TaxesLines {
            get {
                return this.taxesLinesField;
            }
            set {
                this.taxesLinesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/taxes")]
    public enum Tipo {
        
        /// <remarks/>
        Pedido,
        
        /// <remarks/>
        FacturaReg,
        
        /// <remarks/>
        Abono,
        
        /// <remarks/>
        AbonoReg,
        
        /// <remarks/>
        Oferta,
        
        /// <remarks/>
        FacturaPrev,
        
        /// <remarks/>
        AbonoPrev,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/taxes")]
    public enum Accion {
        
        /// <remarks/>
        _blank_,
        
        /// <remarks/>
        Cancel,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/taxes")]
    public partial class ImpuestosLineas {
        
        private string keyField;
        
        private int lineaField;
        
        private bool lineaFieldSpecified;
        
        private int tipoLineaField;
        
        private bool tipoLineaFieldSpecified;
        
        private string codigoField;
        
        private int cantidadField;
        
        private bool cantidadFieldSpecified;
        
        private decimal importeField;
        
        private bool importeFieldSpecified;
        
        private string taxCodeField;
        
        private decimal impuestoField;
        
        private bool impuestoFieldSpecified;
        
        private System.DateTime fecha_respuestaField;
        
        private bool fecha_respuestaFieldSpecified;
        
        private bool procesado_respuestaField;
        
        private bool procesado_respuestaFieldSpecified;
        
        private string shipToLine1Field;
        
        private string shipToLine2Field;
        
        private string shipToLine3Field;
        
        private string shipToCityField;
        
        private string shipToRegionField;
        
        private string shipToPostCodeField;
        
        private string shipToCountryField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public int Linea {
            get {
                return this.lineaField;
            }
            set {
                this.lineaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LineaSpecified {
            get {
                return this.lineaFieldSpecified;
            }
            set {
                this.lineaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TipoLinea {
            get {
                return this.tipoLineaField;
            }
            set {
                this.tipoLineaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TipoLineaSpecified {
            get {
                return this.tipoLineaFieldSpecified;
            }
            set {
                this.tipoLineaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
            }
        }
        
        /// <remarks/>
        public int Cantidad {
            get {
                return this.cantidadField;
            }
            set {
                this.cantidadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CantidadSpecified {
            get {
                return this.cantidadFieldSpecified;
            }
            set {
                this.cantidadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Importe {
            get {
                return this.importeField;
            }
            set {
                this.importeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImporteSpecified {
            get {
                return this.importeFieldSpecified;
            }
            set {
                this.importeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string TaxCode {
            get {
                return this.taxCodeField;
            }
            set {
                this.taxCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Impuesto {
            get {
                return this.impuestoField;
            }
            set {
                this.impuestoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImpuestoSpecified {
            get {
                return this.impuestoFieldSpecified;
            }
            set {
                this.impuestoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Fecha_respuesta {
            get {
                return this.fecha_respuestaField;
            }
            set {
                this.fecha_respuestaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Fecha_respuestaSpecified {
            get {
                return this.fecha_respuestaFieldSpecified;
            }
            set {
                this.fecha_respuestaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Procesado_respuesta {
            get {
                return this.procesado_respuestaField;
            }
            set {
                this.procesado_respuestaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Procesado_respuestaSpecified {
            get {
                return this.procesado_respuestaFieldSpecified;
            }
            set {
                this.procesado_respuestaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ShipToLine1 {
            get {
                return this.shipToLine1Field;
            }
            set {
                this.shipToLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipToLine2 {
            get {
                return this.shipToLine2Field;
            }
            set {
                this.shipToLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipToLine3 {
            get {
                return this.shipToLine3Field;
            }
            set {
                this.shipToLine3Field = value;
            }
        }
        
        /// <remarks/>
        public string ShipToCity {
            get {
                return this.shipToCityField;
            }
            set {
                this.shipToCityField = value;
            }
        }
        
        /// <remarks/>
        public string ShipToRegion {
            get {
                return this.shipToRegionField;
            }
            set {
                this.shipToRegionField = value;
            }
        }
        
        /// <remarks/>
        public string ShipToPostCode {
            get {
                return this.shipToPostCodeField;
            }
            set {
                this.shipToPostCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShipToCountry {
            get {
                return this.shipToCountryField;
            }
            set {
                this.shipToCountryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/taxes")]
    public partial class Taxes_Filter {
        
        private Taxes_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        public Taxes_Fields Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/taxes")]
    public enum Taxes_Fields {
        
        /// <remarks/>
        Tipo,
        
        /// <remarks/>
        No,
        
        /// <remarks/>
        CustomerCode,
        
        /// <remarks/>
        DocDate,
        
        /// <remarks/>
        CurrencyCode,
        
        /// <remarks/>
        ShipFromLine1,
        
        /// <remarks/>
        ShipFromLine2,
        
        /// <remarks/>
        ShipFromLine3,
        
        /// <remarks/>
        ShipFromCity,
        
        /// <remarks/>
        ShipFromRegion,
        
        /// <remarks/>
        ShipFromPostCode,
        
        /// <remarks/>
        ShipFromCountry,
        
        /// <remarks/>
        ShipToLine1,
        
        /// <remarks/>
        ShipToLine2,
        
        /// <remarks/>
        ShipToLine3,
        
        /// <remarks/>
        ShipToCity,
        
        /// <remarks/>
        ShipToRegion,
        
        /// <remarks/>
        ShipToPostCode,
        
        /// <remarks/>
        ShipToCountry,
        
        /// <remarks/>
        Impuesto,
        
        /// <remarks/>
        Fecha_respuesta,
        
        /// <remarks/>
        Procesado_respuesta,
        
        /// <remarks/>
        DescripcionError,
        
        /// <remarks/>
        DescripcionError2,
        
        /// <remarks/>
        DescripcionError3,
        
        /// <remarks/>
        Accion,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Taxes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Taxes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Taxes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Taxes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Taxes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Taxes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Taxes Taxes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Taxes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void CreateMultipleCompletedEventHandler(object sender, CreateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Taxes[] Taxes_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Taxes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Taxes Taxes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Taxes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Taxes[] Taxes_List {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Taxes[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Delete_TaxesLinesCompletedEventHandler(object sender, Delete_TaxesLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_TaxesLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_TaxesLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591