//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3603
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using System.Net;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 

namespace INIKER.CompanyInformation
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "CompanyInformation_Binding", Namespace = "urn:microsoft-dynamics-schemas/page/companyinformation")]
    public partial class CompanyInformation_Service : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;

        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateMultipleOperationCompleted;

        /// <remarks/>     
        public CompanyInformation_Service()
        {
            EntidadesSubcontratacion.Properties.Settings miConfig = new EntidadesSubcontratacion.Properties.Settings();
            this.Url = miConfig.urlInicioDefaultWS + "/Page/CompanyInformation?WSDL";
            this.UseDefaultCredentials = true;
            //this.Url = "http://serv-nsql2008:7047/GINDUSAL/WS/02%20NAVARRA/Page/CompanyInformation?WSDL";
            //this.Credentials = new NetworkCredential("JCA", "Iniker1");
        }

        public CompanyInformation_Service(string IDusuario, string pwd)
        {
            // Este constructor se utiliza para obtener el nombre de la empresa con la que
            // trabaja el usuario que ha hecho login en el equipo.
            EntidadesSubcontratacion.Properties.Settings miConfig = new EntidadesSubcontratacion.Properties.Settings();
            this.Url = miConfig.urlInicioWS + "/Page/CompanyInformation?WSDL";
            if (miConfig.useDefCredts)
                this.UseDefaultCredentials = true;
            else
                this.Credentials = new NetworkCredential(IDusuario, pwd);
        }

        public CompanyInformation_Service(string IDusuario, string pwd, string empresa)
        {
            // Constructor para trabajar contra los web services una vez obtenida la empresa de trabajo
            EntidadesSubcontratacion.Properties.Settings miConfig = new EntidadesSubcontratacion.Properties.Settings();
            this.Url = miConfig.urlInicioWS + "/" + empresa + "/Page/CompanyInformation?WSDL";
            if (miConfig.useDefCredts)
                this.UseDefaultCredentials = true;
            else
                this.Credentials = new NetworkCredential(IDusuario, pwd);
        }

        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;

        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;

        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;

        /// <remarks/>
        public event UpdateMultipleCompletedEventHandler UpdateMultipleCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/companyinformation:ReadMultiple", RequestNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", ResponseElementName = "ReadMultiple_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
        public CompanyInformation[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] CompanyInformation_Filter[] filter, string bookmarkKey, int setSize)
        {
            object[] results = this.Invoke("ReadMultiple", new object[] {
                    filter,
                    bookmarkKey,
                    setSize});
            return ((CompanyInformation[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginReadMultiple(CompanyInformation_Filter[] filter, string bookmarkKey, int setSize, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReadMultiple", new object[] {
                    filter,
                    bookmarkKey,
                    setSize}, callback, asyncState);
        }

        /// <remarks/>
        public CompanyInformation[] EndReadMultiple(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CompanyInformation[])(results[0]));
        }

        /// <remarks/>
        public void ReadMultipleAsync(CompanyInformation_Filter[] filter, string bookmarkKey, int setSize)
        {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }

        /// <remarks/>
        public void ReadMultipleAsync(CompanyInformation_Filter[] filter, string bookmarkKey, int setSize, object userState)
        {
            if ((this.ReadMultipleOperationCompleted == null))
            {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                    filter,
                    bookmarkKey,
                    setSize}, this.ReadMultipleOperationCompleted, userState);
        }

        private void OnReadMultipleOperationCompleted(object arg)
        {
            if ((this.ReadMultipleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/companyinformation:IsUpdated", RequestNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", ResponseElementName = "IsUpdated_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key)
        {
            object[] results = this.Invoke("IsUpdated", new object[] {
                    Key});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsUpdated(string Key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsUpdated", new object[] {
                    Key}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsUpdated(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsUpdatedAsync(string Key)
        {
            this.IsUpdatedAsync(Key, null);
        }

        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState)
        {
            if ((this.IsUpdatedOperationCompleted == null))
            {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                    Key}, this.IsUpdatedOperationCompleted, userState);
        }

        private void OnIsUpdatedOperationCompleted(object arg)
        {
            if ((this.IsUpdatedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/companyinformation:Update", RequestNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", ResponseElementName = "Update_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(ref CompanyInformation CompanyInformation)
        {
            object[] results = this.Invoke("Update", new object[] {
                    CompanyInformation});
            CompanyInformation = ((CompanyInformation)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdate(CompanyInformation CompanyInformation, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Update", new object[] {
                    CompanyInformation}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdate(System.IAsyncResult asyncResult, out CompanyInformation CompanyInformation)
        {
            object[] results = this.EndInvoke(asyncResult);
            CompanyInformation = ((CompanyInformation)(results[0]));
        }

        /// <remarks/>
        public void UpdateAsync(CompanyInformation CompanyInformation)
        {
            this.UpdateAsync(CompanyInformation, null);
        }

        /// <remarks/>
        public void UpdateAsync(CompanyInformation CompanyInformation, object userState)
        {
            if ((this.UpdateOperationCompleted == null))
            {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                    CompanyInformation}, this.UpdateOperationCompleted, userState);
        }

        private void OnUpdateOperationCompleted(object arg)
        {
            if ((this.UpdateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/companyinformation:UpdateMultiple", RequestNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", ResponseElementName = "UpdateMultiple_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/companyinformation", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultiple([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)] ref CompanyInformation[] CompanyInformation_List)
        {
            object[] results = this.Invoke("UpdateMultiple", new object[] {
                    CompanyInformation_List});
            CompanyInformation_List = ((CompanyInformation[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateMultiple(CompanyInformation[] CompanyInformation_List, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateMultiple", new object[] {
                    CompanyInformation_List}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdateMultiple(System.IAsyncResult asyncResult, out CompanyInformation[] CompanyInformation_List)
        {
            object[] results = this.EndInvoke(asyncResult);
            CompanyInformation_List = ((CompanyInformation[])(results[0]));
        }

        /// <remarks/>
        public void UpdateMultipleAsync(CompanyInformation[] CompanyInformation_List)
        {
            this.UpdateMultipleAsync(CompanyInformation_List, null);
        }

        /// <remarks/>
        public void UpdateMultipleAsync(CompanyInformation[] CompanyInformation_List, object userState)
        {
            if ((this.UpdateMultipleOperationCompleted == null))
            {
                this.UpdateMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultipleOperationCompleted);
            }
            this.InvokeAsync("UpdateMultiple", new object[] {
                    CompanyInformation_List}, this.UpdateMultipleOperationCompleted, userState);
        }

        private void OnUpdateMultipleOperationCompleted(object arg)
        {
            if ((this.UpdateMultipleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultipleCompleted(this, new UpdateMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/companyinformation")]
    public partial class CompanyInformation_Filter
    {

        private CompanyInformation_Fields fieldField;

        private string criteriaField;

        /// <comentarios/>
        public CompanyInformation_Fields Field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }

        /// <comentarios/>
        public string Criteria
        {
            get
            {
                return this.criteriaField;
            }
            set
            {
                this.criteriaField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/companyinformation")]
    public enum CompanyInformation_Fields
    {

        /// <comentarios/>
        Name,

        /// <comentarios/>
        Address,

        /// <comentarios/>
        Address_2,

        /// <comentarios/>
        Post_Code,

        /// <comentarios/>
        City,

        /// <comentarios/>
        Country_Region_Code,

        /// <comentarios/>
        County,

        /// <comentarios/>
        Phone_No,

        /// <comentarios/>
        VAT_Registration_No,

        /// <comentarios/>
        Industrial_Classification,

        /// <comentarios/>
        CNAE_Description,

        /// <comentarios/>
        Abbreviated_Name,

        /// <comentarios/>
        Show_Abbreviated_Name,

        /// <comentarios/>
        Fax_No,

        /// <comentarios/>
        E_Mail,

        /// <comentarios/>
        Home_Page,

        /// <comentarios/>
        IC_Partner_Code,

        /// <comentarios/>
        IC_Inbox_Type,

        /// <comentarios/>
        IC_Inbox_Details,

        /// <comentarios/>
        Bank_Name,

        /// <comentarios/>
        CCC_Bank_No,

        /// <comentarios/>
        CCC_Bank_Branch_No,

        /// <comentarios/>
        CCC_Control_Digits,

        /// <comentarios/>
        CCC_Bank_Account_No,

        /// <comentarios/>
        CCC_No,

        /// <comentarios/>
        Payment_Routing_No,

        /// <comentarios/>
        Giro_No,

        /// <comentarios/>
        Payment_Days_Code,

        /// <comentarios/>
        Non_Paymt_Periods_Code,

        /// <comentarios/>
        Ship_to_Name,

        /// <comentarios/>
        Ship_to_Address,

        /// <comentarios/>
        Ship_to_Address_2,

        /// <comentarios/>
        Ship_to_Post_Code,

        /// <comentarios/>
        Ship_to_City,

        /// <comentarios/>
        Ship_to_Country_Region_Code,

        /// <comentarios/>
        Ship_to_Contact,

        /// <comentarios/>
        Ship_to_County,

        /// <comentarios/>
        Location_Code,

        /// <comentarios/>
        Responsibility_Center,

        /// <comentarios/>
        Check_Avail_Period_Calc,

        /// <comentarios/>
        Check_Avail_Time_Bucket,

        /// <comentarios/>
        Base_Calendar_Code,

        /// <comentarios/>
        Customized_Calendar,

        /// <comentarios/>
        Cal_Convergence_Time_Frame,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/companyinformation")]
    public partial class CompanyInformation
    {

        private string keyField;

        private string nameField;

        private string addressField;

        private string address_2Field;

        private string post_CodeField;

        private string cityField;

        private string country_Region_CodeField;

        private string countyField;

        private string phone_NoField;

        private string vAT_Registration_NoField;

        private string industrial_ClassificationField;

        private string cNAE_DescriptionField;

        private string abbreviated_NameField;

        private bool show_Abbreviated_NameField;

        private bool show_Abbreviated_NameFieldSpecified;

        private string fax_NoField;

        private string e_MailField;

        private string home_PageField;

        private string iC_Partner_CodeField;

        private IC_Inbox_Type iC_Inbox_TypeField;

        private bool iC_Inbox_TypeFieldSpecified;

        private string iC_Inbox_DetailsField;

        private string bank_NameField;

        private string cCC_Bank_NoField;

        private string cCC_Bank_Branch_NoField;

        private string cCC_Control_DigitsField;

        private string cCC_Bank_Account_NoField;

        private string cCC_NoField;

        private string payment_Routing_NoField;

        private string giro_NoField;

        private string payment_Days_CodeField;

        private string non_Paymt_Periods_CodeField;

        private string ship_to_NameField;

        private string ship_to_AddressField;

        private string ship_to_Address_2Field;

        private string ship_to_Post_CodeField;

        private string ship_to_CityField;

        private string ship_to_Country_Region_CodeField;

        private string ship_to_ContactField;

        private string ship_to_CountyField;

        private string location_CodeField;

        private string responsibility_CenterField;

        private string check_Avail_Period_CalcField;

        private Check_Avail_Time_Bucket check_Avail_Time_BucketField;

        private bool check_Avail_Time_BucketFieldSpecified;

        private string base_Calendar_CodeField;

        private string customized_CalendarField;

        private string cal_Convergence_Time_FrameField;

        /// <comentarios/>
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <comentarios/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <comentarios/>
        public string Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                this.addressField = value;
            }
        }

        /// <comentarios/>
        public string Address_2
        {
            get
            {
                return this.address_2Field;
            }
            set
            {
                this.address_2Field = value;
            }
        }

        /// <comentarios/>
        public string Post_Code
        {
            get
            {
                return this.post_CodeField;
            }
            set
            {
                this.post_CodeField = value;
            }
        }

        /// <comentarios/>
        public string City
        {
            get
            {
                return this.cityField;
            }
            set
            {
                this.cityField = value;
            }
        }

        /// <comentarios/>
        public string Country_Region_Code
        {
            get
            {
                return this.country_Region_CodeField;
            }
            set
            {
                this.country_Region_CodeField = value;
            }
        }

        /// <comentarios/>
        public string County
        {
            get
            {
                return this.countyField;
            }
            set
            {
                this.countyField = value;
            }
        }

        /// <comentarios/>
        public string Phone_No
        {
            get
            {
                return this.phone_NoField;
            }
            set
            {
                this.phone_NoField = value;
            }
        }

        /// <comentarios/>
        public string VAT_Registration_No
        {
            get
            {
                return this.vAT_Registration_NoField;
            }
            set
            {
                this.vAT_Registration_NoField = value;
            }
        }

        /// <comentarios/>
        public string Industrial_Classification
        {
            get
            {
                return this.industrial_ClassificationField;
            }
            set
            {
                this.industrial_ClassificationField = value;
            }
        }

        /// <comentarios/>
        public string CNAE_Description
        {
            get
            {
                return this.cNAE_DescriptionField;
            }
            set
            {
                this.cNAE_DescriptionField = value;
            }
        }

        /// <comentarios/>
        public string Abbreviated_Name
        {
            get
            {
                return this.abbreviated_NameField;
            }
            set
            {
                this.abbreviated_NameField = value;
            }
        }

        /// <comentarios/>
        public bool Show_Abbreviated_Name
        {
            get
            {
                return this.show_Abbreviated_NameField;
            }
            set
            {
                this.show_Abbreviated_NameField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Show_Abbreviated_NameSpecified
        {
            get
            {
                return this.show_Abbreviated_NameFieldSpecified;
            }
            set
            {
                this.show_Abbreviated_NameFieldSpecified = value;
            }
        }

        /// <comentarios/>
        public string Fax_No
        {
            get
            {
                return this.fax_NoField;
            }
            set
            {
                this.fax_NoField = value;
            }
        }

        /// <comentarios/>
        public string E_Mail
        {
            get
            {
                return this.e_MailField;
            }
            set
            {
                this.e_MailField = value;
            }
        }

        /// <comentarios/>
        public string Home_Page
        {
            get
            {
                return this.home_PageField;
            }
            set
            {
                this.home_PageField = value;
            }
        }

        /// <comentarios/>
        public string IC_Partner_Code
        {
            get
            {
                return this.iC_Partner_CodeField;
            }
            set
            {
                this.iC_Partner_CodeField = value;
            }
        }

        /// <comentarios/>
        public IC_Inbox_Type IC_Inbox_Type
        {
            get
            {
                return this.iC_Inbox_TypeField;
            }
            set
            {
                this.iC_Inbox_TypeField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IC_Inbox_TypeSpecified
        {
            get
            {
                return this.iC_Inbox_TypeFieldSpecified;
            }
            set
            {
                this.iC_Inbox_TypeFieldSpecified = value;
            }
        }

        /// <comentarios/>
        public string IC_Inbox_Details
        {
            get
            {
                return this.iC_Inbox_DetailsField;
            }
            set
            {
                this.iC_Inbox_DetailsField = value;
            }
        }

        /// <comentarios/>
        public string Bank_Name
        {
            get
            {
                return this.bank_NameField;
            }
            set
            {
                this.bank_NameField = value;
            }
        }

        /// <comentarios/>
        public string CCC_Bank_No
        {
            get
            {
                return this.cCC_Bank_NoField;
            }
            set
            {
                this.cCC_Bank_NoField = value;
            }
        }

        /// <comentarios/>
        public string CCC_Bank_Branch_No
        {
            get
            {
                return this.cCC_Bank_Branch_NoField;
            }
            set
            {
                this.cCC_Bank_Branch_NoField = value;
            }
        }

        /// <comentarios/>
        public string CCC_Control_Digits
        {
            get
            {
                return this.cCC_Control_DigitsField;
            }
            set
            {
                this.cCC_Control_DigitsField = value;
            }
        }

        /// <comentarios/>
        public string CCC_Bank_Account_No
        {
            get
            {
                return this.cCC_Bank_Account_NoField;
            }
            set
            {
                this.cCC_Bank_Account_NoField = value;
            }
        }

        /// <comentarios/>
        public string CCC_No
        {
            get
            {
                return this.cCC_NoField;
            }
            set
            {
                this.cCC_NoField = value;
            }
        }

        /// <comentarios/>
        public string Payment_Routing_No
        {
            get
            {
                return this.payment_Routing_NoField;
            }
            set
            {
                this.payment_Routing_NoField = value;
            }
        }

        /// <comentarios/>
        public string Giro_No
        {
            get
            {
                return this.giro_NoField;
            }
            set
            {
                this.giro_NoField = value;
            }
        }

        /// <comentarios/>
        public string Payment_Days_Code
        {
            get
            {
                return this.payment_Days_CodeField;
            }
            set
            {
                this.payment_Days_CodeField = value;
            }
        }

        /// <comentarios/>
        public string Non_Paymt_Periods_Code
        {
            get
            {
                return this.non_Paymt_Periods_CodeField;
            }
            set
            {
                this.non_Paymt_Periods_CodeField = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_Name
        {
            get
            {
                return this.ship_to_NameField;
            }
            set
            {
                this.ship_to_NameField = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_Address
        {
            get
            {
                return this.ship_to_AddressField;
            }
            set
            {
                this.ship_to_AddressField = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_Address_2
        {
            get
            {
                return this.ship_to_Address_2Field;
            }
            set
            {
                this.ship_to_Address_2Field = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_Post_Code
        {
            get
            {
                return this.ship_to_Post_CodeField;
            }
            set
            {
                this.ship_to_Post_CodeField = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_City
        {
            get
            {
                return this.ship_to_CityField;
            }
            set
            {
                this.ship_to_CityField = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_Country_Region_Code
        {
            get
            {
                return this.ship_to_Country_Region_CodeField;
            }
            set
            {
                this.ship_to_Country_Region_CodeField = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_Contact
        {
            get
            {
                return this.ship_to_ContactField;
            }
            set
            {
                this.ship_to_ContactField = value;
            }
        }

        /// <comentarios/>
        public string Ship_to_County
        {
            get
            {
                return this.ship_to_CountyField;
            }
            set
            {
                this.ship_to_CountyField = value;
            }
        }

        /// <comentarios/>
        public string Location_Code
        {
            get
            {
                return this.location_CodeField;
            }
            set
            {
                this.location_CodeField = value;
            }
        }

        /// <comentarios/>
        public string Responsibility_Center
        {
            get
            {
                return this.responsibility_CenterField;
            }
            set
            {
                this.responsibility_CenterField = value;
            }
        }

        /// <comentarios/>
        public string Check_Avail_Period_Calc
        {
            get
            {
                return this.check_Avail_Period_CalcField;
            }
            set
            {
                this.check_Avail_Period_CalcField = value;
            }
        }

        /// <comentarios/>
        public Check_Avail_Time_Bucket Check_Avail_Time_Bucket
        {
            get
            {
                return this.check_Avail_Time_BucketField;
            }
            set
            {
                this.check_Avail_Time_BucketField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Check_Avail_Time_BucketSpecified
        {
            get
            {
                return this.check_Avail_Time_BucketFieldSpecified;
            }
            set
            {
                this.check_Avail_Time_BucketFieldSpecified = value;
            }
        }

        /// <comentarios/>
        public string Base_Calendar_Code
        {
            get
            {
                return this.base_Calendar_CodeField;
            }
            set
            {
                this.base_Calendar_CodeField = value;
            }
        }

        /// <comentarios/>
        public string Customized_Calendar
        {
            get
            {
                return this.customized_CalendarField;
            }
            set
            {
                this.customized_CalendarField = value;
            }
        }

        /// <comentarios/>
        public string Cal_Convergence_Time_Frame
        {
            get
            {
                return this.cal_Convergence_Time_FrameField;
            }
            set
            {
                this.cal_Convergence_Time_FrameField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/companyinformation")]
    public enum IC_Inbox_Type
    {

        /// <comentarios/>
        File_Location,

        /// <comentarios/>
        Database,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/companyinformation")]
    public enum Check_Avail_Time_Bucket
    {

        /// <comentarios/>
        Day,

        /// <comentarios/>
        Week,

        /// <comentarios/>
        Month,

        /// <comentarios/>
        Quarter,

        /// <comentarios/>
        Year,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CompanyInformation[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CompanyInformation[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CompanyInformation CompanyInformation
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CompanyInformation)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UpdateMultipleCompletedEventHandler(object sender, UpdateMultipleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CompanyInformation[] CompanyInformation_List
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CompanyInformation[])(this.results[0]));
            }
        }
    }
}