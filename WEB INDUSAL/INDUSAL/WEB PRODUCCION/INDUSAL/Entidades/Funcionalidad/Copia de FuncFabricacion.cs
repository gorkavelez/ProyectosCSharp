//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3603
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using System.Net;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 

namespace INIKER.FuncFabricacion
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "FuncFabricacion_Binding", Namespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion")]
    public partial class FuncFabricacion : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GenerarMovRecepcionOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovLavadoraOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovTunelOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovDesaprestadoOperationCompleted;

        private System.Threading.SendOrPostCallback LoginWebOperationCompleted;

        private System.Threading.SendOrPostCallback InventProdAlmacenOperationCompleted;

        private System.Threading.SendOrPostCallback ValidarSexagesimalOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovPlanchadoOperationCompleted;

        private System.Threading.SendOrPostCallback TransferirProductoPlanchadoOperationCompleted;

        private System.Threading.SendOrPostCallback GetNoSerieLavadoOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovExpedicionOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovRechazoOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovProdRechazoOperationCompleted;

        private System.Threading.SendOrPostCallback UltPedVentaAbiertoCteOperationCompleted;

        private System.Threading.SendOrPostCallback InsertarLineaPedidoVentaOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarLogInteraccionOperationCompleted;

        private System.Threading.SendOrPostCallback GetCustomerContactOperationCompleted;

        private System.Threading.SendOrPostCallback GetEntryNoOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarPedidoAdelantadoOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovConteoOperationCompleted;

        private System.Threading.SendOrPostCallback TransferirProductoConConteoOperationCompleted;

        private System.Threading.SendOrPostCallback SelecAlmacenOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarPedidoClienteOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovPesajeOperationCompleted;

        private System.Threading.SendOrPostCallback ActualizarMovProdPesajeOperationCompleted;

        private System.Threading.SendOrPostCallback EliminarMovProdPesajeOperationCompleted;

        private System.Threading.SendOrPostCallback RegistrarPedidoVentaOperationCompleted;

        private System.Threading.SendOrPostCallback RechazarOperationCompleted;

        private System.Threading.SendOrPostCallback ACosturaOperationCompleted;

        private System.Threading.SendOrPostCallback AOxidoOperationCompleted;

        private System.Threading.SendOrPostCallback GetAlmacenPorClienteOperationCompleted;

        private System.Threading.SendOrPostCallback GetAlmacenPorTipoOperationCompleted;

        private System.Threading.SendOrPostCallback GetInternalCustomerOperationCompleted;

        private System.Threading.SendOrPostCallback GetNumMovGeneradoOperationCompleted;

        private System.Threading.SendOrPostCallback EliminarEtiquetaProcesadaOperationCompleted;

        private System.Threading.SendOrPostCallback InsertarRegistroEtiquetaOperationCompleted;

        private System.Threading.SendOrPostCallback ObtenerCorrelativoOperationCompleted;

        private System.Threading.SendOrPostCallback AjusteProductoAlmacenOperationCompleted;

        private System.Threading.SendOrPostCallback GenRegMovSubcontrOperationCompleted;

        private System.Threading.SendOrPostCallback SalidaCosturaOperationCompleted;

        private System.Threading.SendOrPostCallback AlmacenClientePresenteOperationCompleted;

        private System.Threading.SendOrPostCallback DeOxidoACosturaOperationCompleted;

        private System.Threading.SendOrPostCallback EmpresaClienteOperationCompleted;

        private System.Threading.SendOrPostCallback GenerarMovUniformidadOperationCompleted;

        /// <remarks/>
        public FuncFabricacion()
        {
            // Constructor por defecto creado al generar la clase con WSDL
            //this.Url = "http://serv-nsql2008:7047/GINDUSAL/WS/C.N.S.I/Codeunit/FuncFabricacion?WSDL";
            //Entidades.Properties.Settings miConfig = new Entidades.Properties.Settings();
            //this.Url = miConfig.urlInicioWS + "Codeunit/FuncFabricacion?WSDL";
            //this.Credentials = new NetworkCredential("JCA", "Iniker1");
            Entidades.Properties.Settings miConfig = new Entidades.Properties.Settings();
            this.Url = miConfig.urlInicioDefaultWS + "/Codeunit/FuncFabricacion?WSDL";
            this.UseDefaultCredentials = true;
        }

        public FuncFabricacion(string IDusuario, string pwd)
        {
            // Este constructor se utiliza para obtener el nombre de la empresa con la que
            // trabaja el usuario que ha hecho login en el equipo.
            Entidades.Properties.Settings miConfig = new Entidades.Properties.Settings();
            this.Url = miConfig.urlInicioWS + "/" + miConfig.empLogin + "/Codeunit/FuncFabricacion?WSDL";
            if (miConfig.useDefCredts)
                this.UseDefaultCredentials = true;
            else
                this.Credentials = new NetworkCredential(IDusuario, pwd);


        }

        public FuncFabricacion(string IDusuario, string pwd, string empresa)
        {
            // Constructor para trabajar contra los web services una vez obtenida la empresa de trabajo
            Entidades.Properties.Settings miConfig = new Entidades.Properties.Settings();
            this.Url = miConfig.urlInicioWS + "/" + empresa + "/Codeunit/FuncFabricacion?WSDL";
            if (miConfig.useDefCredts)
                this.UseDefaultCredentials = true;
            else
                this.Credentials = new NetworkCredential(IDusuario, pwd);
        }

        /// <remarks/>
        public event GenerarMovRecepcionCompletedEventHandler GenerarMovRecepcionCompleted;

        /// <remarks/>
        public event GenerarMovLavadoraCompletedEventHandler GenerarMovLavadoraCompleted;

        /// <remarks/>
        public event GenerarMovTunelCompletedEventHandler GenerarMovTunelCompleted;

        /// <remarks/>
        public event GenerarMovDesaprestadoCompletedEventHandler GenerarMovDesaprestadoCompleted;

        /// <remarks/>
        public event LoginWebCompletedEventHandler LoginWebCompleted;

        /// <remarks/>
        public event InventProdAlmacenCompletedEventHandler InventProdAlmacenCompleted;

        /// <remarks/>
        public event ValidarSexagesimalCompletedEventHandler ValidarSexagesimalCompleted;

        /// <remarks/>
        public event GenerarMovPlanchadoCompletedEventHandler GenerarMovPlanchadoCompleted;

        /// <remarks/>
        public event TransferirProductoPlanchadoCompletedEventHandler TransferirProductoPlanchadoCompleted;

        /// <remarks/>
        public event GetNoSerieLavadoCompletedEventHandler GetNoSerieLavadoCompleted;

        /// <remarks/>
        public event GenerarMovExpedicionCompletedEventHandler GenerarMovExpedicionCompleted;

        /// <remarks/>
        public event GenerarMovRechazoCompletedEventHandler GenerarMovRechazoCompleted;

        /// <remarks/>
        public event GenerarMovProdRechazoCompletedEventHandler GenerarMovProdRechazoCompleted;

        /// <remarks/>
        public event UltPedVentaAbiertoCteCompletedEventHandler UltPedVentaAbiertoCteCompleted;

        /// <remarks/>
        public event InsertarLineaPedidoVentaCompletedEventHandler InsertarLineaPedidoVentaCompleted;

        /// <remarks/>
        public event GenerarLogInteraccionCompletedEventHandler GenerarLogInteraccionCompleted;

        /// <remarks/>
        public event GetCustomerContactCompletedEventHandler GetCustomerContactCompleted;

        /// <remarks/>
        public event GetEntryNoCompletedEventHandler GetEntryNoCompleted;

        /// <remarks/>
        public event GenerarPedidoAdelantadoCompletedEventHandler GenerarPedidoAdelantadoCompleted;

        /// <remarks/>
        public event GenerarMovConteoCompletedEventHandler GenerarMovConteoCompleted;

        /// <remarks/>
        public event TransferirProductoConConteoCompletedEventHandler TransferirProductoConConteoCompleted;

        /// <remarks/>
        public event SelecAlmacenCompletedEventHandler SelecAlmacenCompleted;

        /// <remarks/>
        public event GenerarPedidoClienteCompletedEventHandler GenerarPedidoClienteCompleted;

        /// <remarks/>
        public event GenerarMovPesajeCompletedEventHandler GenerarMovPesajeCompleted;

        /// <remarks/>
        public event ActualizarMovProdPesajeCompletedEventHandler ActualizarMovProdPesajeCompleted;

        /// <remarks/>
        public event EliminarMovProdPesajeCompletedEventHandler EliminarMovProdPesajeCompleted;

        /// <remarks/>
        public event RegistrarPedidoVentaCompletedEventHandler RegistrarPedidoVentaCompleted;

        /// <remarks/>
        public event RechazarCompletedEventHandler RechazarCompleted;

        /// <remarks/>
        public event ACosturaCompletedEventHandler ACosturaCompleted;

        /// <remarks/>
        public event AOxidoCompletedEventHandler AOxidoCompleted;

        /// <remarks/>
        public event GetAlmacenPorClienteCompletedEventHandler GetAlmacenPorClienteCompleted;

        /// <remarks/>
        public event GetAlmacenPorTipoCompletedEventHandler GetAlmacenPorTipoCompleted;

        /// <remarks/>
        public event GetInternalCustomerCompletedEventHandler GetInternalCustomerCompleted;

        /// <remarks/>
        public event GetNumMovGeneradoCompletedEventHandler GetNumMovGeneradoCompleted;

        /// <remarks/>
        public event EliminarEtiquetaProcesadaCompletedEventHandler EliminarEtiquetaProcesadaCompleted;

        /// <remarks/>
        public event InsertarRegistroEtiquetaCompletedEventHandler InsertarRegistroEtiquetaCompleted;

        /// <remarks/>
        public event ObtenerCorrelativoCompletedEventHandler ObtenerCorrelativoCompleted;

        /// <remarks/>
        public event AjusteProductoAlmacenCompletedEventHandler AjusteProductoAlmacenCompleted;

        /// <remarks/>
        public event GenRegMovSubcontrCompletedEventHandler GenRegMovSubcontrCompleted;

        /// <remarks/>
        public event SalidaCosturaCompletedEventHandler SalidaCosturaCompleted;

        /// <remarks/>
        public event AlmacenClientePresenteCompletedEventHandler AlmacenClientePresenteCompleted;

        /// <remarks/>
        public event DeOxidoACosturaCompletedEventHandler DeOxidoACosturaCompleted;

        /// <remarks/>
        public event EmpresaClienteCompletedEventHandler EmpresaClienteCompleted;

        /// <remarks/>
        public event GenerarMovUniformidadCompletedEventHandler GenerarMovUniformidadCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovRecepcion", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovRecepcion_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarMovRecepcion(string codTransp, string codCte, decimal numTraidos, decimal numEnviados, decimal peso, string codRuta, string codIncid, bool sinConteo, int carrosVacios, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            this.Invoke("GenerarMovRecepcion", new object[] {
                    codTransp,
                    codCte,
                    numTraidos,
                    numEnviados,
                    peso,
                    codRuta,
                    codIncid,
                    sinConteo,
                    carrosVacios,
                    fechaMov,
                    horaMov});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovRecepcion(string codTransp, string codCte, decimal numTraidos, decimal numEnviados, decimal peso, string codRuta, string codIncid, bool sinConteo, int carrosVacios, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovRecepcion", new object[] {
                    codTransp,
                    codCte,
                    numTraidos,
                    numEnviados,
                    peso,
                    codRuta,
                    codIncid,
                    sinConteo,
                    carrosVacios,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarMovRecepcion(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarMovRecepcionAsync(string codTransp, string codCte, decimal numTraidos, decimal numEnviados, decimal peso, string codRuta, string codIncid, bool sinConteo, int carrosVacios, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.GenerarMovRecepcionAsync(codTransp, codCte, numTraidos, numEnviados, peso, codRuta, codIncid, sinConteo, carrosVacios, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void GenerarMovRecepcionAsync(string codTransp, string codCte, decimal numTraidos, decimal numEnviados, decimal peso, string codRuta, string codIncid, bool sinConteo, int carrosVacios, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.GenerarMovRecepcionOperationCompleted == null))
            {
                this.GenerarMovRecepcionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovRecepcionOperationCompleted);
            }
            this.InvokeAsync("GenerarMovRecepcion", new object[] {
                    codTransp,
                    codCte,
                    numTraidos,
                    numEnviados,
                    peso,
                    codRuta,
                    codIncid,
                    sinConteo,
                    carrosVacios,
                    fechaMov,
                    horaMov}, this.GenerarMovRecepcionOperationCompleted, userState);
        }

        private void OnGenerarMovRecepcionOperationCompleted(object arg)
        {
            if ((this.GenerarMovRecepcionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovRecepcionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovLavadora", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovLavadora_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarMovLavadora(string codOperario, string codLavadora, string numProg, decimal peso, string numLavado, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov, string codContenedor, string turno, string cliente, string pedido, decimal tiempoProg)
        {
            this.Invoke("GenerarMovLavadora", new object[] {
                    codOperario,
                    codLavadora,
                    numProg,
                    peso,
                    numLavado,
                    fechaMov,
                    horaMov,
                    codContenedor,
                    turno,
                    cliente,
                    pedido,
                    tiempoProg});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovLavadora(string codOperario, string codLavadora, string numProg, decimal peso, string numLavado, System.DateTime fechaMov, System.DateTime horaMov, string codContenedor, string turno, string cliente, string pedido, decimal tiempoProg, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovLavadora", new object[] {
                    codOperario,
                    codLavadora,
                    numProg,
                    peso,
                    numLavado,
                    fechaMov,
                    horaMov,
                    codContenedor,
                    turno,
                    cliente,
                    pedido,
                    tiempoProg}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarMovLavadora(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarMovLavadoraAsync(string codOperario, string codLavadora, string numProg, decimal peso, string numLavado, System.DateTime fechaMov, System.DateTime horaMov, string codContenedor, string turno, string cliente, string pedido, decimal tiempoProg)
        {
            this.GenerarMovLavadoraAsync(codOperario, codLavadora, numProg, peso, numLavado, fechaMov, horaMov, codContenedor, turno, cliente, pedido, tiempoProg, null);
        }

        /// <remarks/>
        public void GenerarMovLavadoraAsync(string codOperario, string codLavadora, string numProg, decimal peso, string numLavado, System.DateTime fechaMov, System.DateTime horaMov, string codContenedor, string turno, string cliente, string pedido, decimal tiempoProg, object userState)
        {
            if ((this.GenerarMovLavadoraOperationCompleted == null))
            {
                this.GenerarMovLavadoraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovLavadoraOperationCompleted);
            }
            this.InvokeAsync("GenerarMovLavadora", new object[] {
                    codOperario,
                    codLavadora,
                    numProg,
                    peso,
                    numLavado,
                    fechaMov,
                    horaMov,
                    codContenedor,
                    turno,
                    cliente,
                    pedido,
                    tiempoProg}, this.GenerarMovLavadoraOperationCompleted, userState);
        }

        private void OnGenerarMovLavadoraOperationCompleted(object arg)
        {
            if ((this.GenerarMovLavadoraCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovLavadoraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovTunel", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovTunel_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarMovTunel(string codOperario, string codTunel, decimal tiempo, decimal peso, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov, string turno, string cliente, string pedido)
        {
            this.Invoke("GenerarMovTunel", new object[] {
                    codOperario,
                    codTunel,
                    tiempo,
                    peso,
                    fechaMov,
                    horaMov,
                    turno,
                    cliente,
                    pedido});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovTunel(string codOperario, string codTunel, decimal tiempo, decimal peso, System.DateTime fechaMov, System.DateTime horaMov, string turno, string cliente, string pedido, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovTunel", new object[] {
                    codOperario,
                    codTunel,
                    tiempo,
                    peso,
                    fechaMov,
                    horaMov,
                    turno,
                    cliente,
                    pedido}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarMovTunel(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarMovTunelAsync(string codOperario, string codTunel, decimal tiempo, decimal peso, System.DateTime fechaMov, System.DateTime horaMov, string turno, string cliente, string pedido)
        {
            this.GenerarMovTunelAsync(codOperario, codTunel, tiempo, peso, fechaMov, horaMov, turno, cliente, pedido, null);
        }

        /// <remarks/>
        public void GenerarMovTunelAsync(string codOperario, string codTunel, decimal tiempo, decimal peso, System.DateTime fechaMov, System.DateTime horaMov, string turno, string cliente, string pedido, object userState)
        {
            if ((this.GenerarMovTunelOperationCompleted == null))
            {
                this.GenerarMovTunelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovTunelOperationCompleted);
            }
            this.InvokeAsync("GenerarMovTunel", new object[] {
                    codOperario,
                    codTunel,
                    tiempo,
                    peso,
                    fechaMov,
                    horaMov,
                    turno,
                    cliente,
                    pedido}, this.GenerarMovTunelOperationCompleted, userState);
        }

        private void OnGenerarMovTunelOperationCompleted(object arg)
        {
            if ((this.GenerarMovTunelCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovTunelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovDesaprestado", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovDesaprestado_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GenerarMovDesaprestado(string codProd, decimal cantidad, string numSerie, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            object[] results = this.Invoke("GenerarMovDesaprestado", new object[] {
                    codProd,
                    cantidad,
                    numSerie,
                    fechaMov,
                    horaMov});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovDesaprestado(string codProd, decimal cantidad, string numSerie, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovDesaprestado", new object[] {
                    codProd,
                    cantidad,
                    numSerie,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGenerarMovDesaprestado(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GenerarMovDesaprestadoAsync(string codProd, decimal cantidad, string numSerie, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.GenerarMovDesaprestadoAsync(codProd, cantidad, numSerie, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void GenerarMovDesaprestadoAsync(string codProd, decimal cantidad, string numSerie, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.GenerarMovDesaprestadoOperationCompleted == null))
            {
                this.GenerarMovDesaprestadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovDesaprestadoOperationCompleted);
            }
            this.InvokeAsync("GenerarMovDesaprestado", new object[] {
                    codProd,
                    cantidad,
                    numSerie,
                    fechaMov,
                    horaMov}, this.GenerarMovDesaprestadoOperationCompleted, userState);
        }

        private void OnGenerarMovDesaprestadoOperationCompleted(object arg)
        {
            if ((this.GenerarMovDesaprestadoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovDesaprestadoCompleted(this, new GenerarMovDesaprestadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:LoginWeb", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "LoginWeb_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LoginWeb(string userLogin)
        {
            object[] results = this.Invoke("LoginWeb", new object[] {
                    userLogin});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginLoginWeb(string userLogin, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("LoginWeb", new object[] {
                    userLogin}, callback, asyncState);
        }

        /// <remarks/>
        public string EndLoginWeb(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void LoginWebAsync(string userLogin)
        {
            this.LoginWebAsync(userLogin, null);
        }

        /// <remarks/>
        public void LoginWebAsync(string userLogin, object userState)
        {
            if ((this.LoginWebOperationCompleted == null))
            {
                this.LoginWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginWebOperationCompleted);
            }
            this.InvokeAsync("LoginWeb", new object[] {
                    userLogin}, this.LoginWebOperationCompleted, userState);
        }

        private void OnLoginWebOperationCompleted(object arg)
        {
            if ((this.LoginWebCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginWebCompleted(this, new LoginWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:InventProdAlmacen", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "InventProdAlmacen_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int InventProdAlmacen(string producto, string almacen)
        {
            object[] results = this.Invoke("InventProdAlmacen", new object[] {
                    producto,
                    almacen});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInventProdAlmacen(string producto, string almacen, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InventProdAlmacen", new object[] {
                    producto,
                    almacen}, callback, asyncState);
        }

        /// <remarks/>
        public int EndInventProdAlmacen(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InventProdAlmacenAsync(string producto, string almacen)
        {
            this.InventProdAlmacenAsync(producto, almacen, null);
        }

        /// <remarks/>
        public void InventProdAlmacenAsync(string producto, string almacen, object userState)
        {
            if ((this.InventProdAlmacenOperationCompleted == null))
            {
                this.InventProdAlmacenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInventProdAlmacenOperationCompleted);
            }
            this.InvokeAsync("InventProdAlmacen", new object[] {
                    producto,
                    almacen}, this.InventProdAlmacenOperationCompleted, userState);
        }

        private void OnInventProdAlmacenOperationCompleted(object arg)
        {
            if ((this.InventProdAlmacenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InventProdAlmacenCompleted(this, new InventProdAlmacenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:ValidarSexagesimal", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "ValidarSexagesimal_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidarSexagesimal(ref decimal vSexagesimal)
        {
            object[] results = this.Invoke("ValidarSexagesimal", new object[] {
                    vSexagesimal});
            vSexagesimal = ((decimal)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginValidarSexagesimal(decimal vSexagesimal, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ValidarSexagesimal", new object[] {
                    vSexagesimal}, callback, asyncState);
        }

        /// <remarks/>
        public void EndValidarSexagesimal(System.IAsyncResult asyncResult, out decimal vSexagesimal)
        {
            object[] results = this.EndInvoke(asyncResult);
            vSexagesimal = ((decimal)(results[0]));
        }

        /// <remarks/>
        public void ValidarSexagesimalAsync(decimal vSexagesimal)
        {
            this.ValidarSexagesimalAsync(vSexagesimal, null);
        }

        /// <remarks/>
        public void ValidarSexagesimalAsync(decimal vSexagesimal, object userState)
        {
            if ((this.ValidarSexagesimalOperationCompleted == null))
            {
                this.ValidarSexagesimalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidarSexagesimalOperationCompleted);
            }
            this.InvokeAsync("ValidarSexagesimal", new object[] {
                    vSexagesimal}, this.ValidarSexagesimalOperationCompleted, userState);
        }

        private void OnValidarSexagesimalOperationCompleted(object arg)
        {
            if ((this.ValidarSexagesimalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidarSexagesimalCompleted(this, new ValidarSexagesimalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovPlanchado", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovPlanchado_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GenerarMovPlanchado(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, string maquina, string turno, string pedido, string operario, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            object[] results = this.Invoke("GenerarMovPlanchado", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov,
                    maquina,
                    turno,
                    pedido,
                    operario,
                    fechaMov,
                    horaMov});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovPlanchado(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, string maquina, string turno, string pedido, string operario, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovPlanchado", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov,
                    maquina,
                    turno,
                    pedido,
                    operario,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGenerarMovPlanchado(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GenerarMovPlanchadoAsync(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, string maquina, string turno, string pedido, string operario, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.GenerarMovPlanchadoAsync(codCte, codProd, cantidad, numSerie, tipoMov, maquina, turno, pedido, operario, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void GenerarMovPlanchadoAsync(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, string maquina, string turno, string pedido, string operario, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.GenerarMovPlanchadoOperationCompleted == null))
            {
                this.GenerarMovPlanchadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovPlanchadoOperationCompleted);
            }
            this.InvokeAsync("GenerarMovPlanchado", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov,
                    maquina,
                    turno,
                    pedido,
                    operario,
                    fechaMov,
                    horaMov}, this.GenerarMovPlanchadoOperationCompleted, userState);
        }

        private void OnGenerarMovPlanchadoOperationCompleted(object arg)
        {
            if ((this.GenerarMovPlanchadoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovPlanchadoCompleted(this, new GenerarMovPlanchadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:TransferirProductoPlancha" +
            "do", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "TransferirProductoPlanchado_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferirProductoPlanchado(string codProd, decimal cantidad, string numSerie, string cliente)
        {
            this.Invoke("TransferirProductoPlanchado", new object[] {
                    codProd,
                    cantidad,
                    numSerie,
                    cliente});
        }

        /// <remarks/>
        public System.IAsyncResult BeginTransferirProductoPlanchado(string codProd, decimal cantidad, string numSerie, string cliente, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("TransferirProductoPlanchado", new object[] {
                    codProd,
                    cantidad,
                    numSerie,
                    cliente}, callback, asyncState);
        }

        /// <remarks/>
        public void EndTransferirProductoPlanchado(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void TransferirProductoPlanchadoAsync(string codProd, decimal cantidad, string numSerie, string cliente)
        {
            this.TransferirProductoPlanchadoAsync(codProd, cantidad, numSerie, cliente, null);
        }

        /// <remarks/>
        public void TransferirProductoPlanchadoAsync(string codProd, decimal cantidad, string numSerie, string cliente, object userState)
        {
            if ((this.TransferirProductoPlanchadoOperationCompleted == null))
            {
                this.TransferirProductoPlanchadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferirProductoPlanchadoOperationCompleted);
            }
            this.InvokeAsync("TransferirProductoPlanchado", new object[] {
                    codProd,
                    cantidad,
                    numSerie,
                    cliente}, this.TransferirProductoPlanchadoOperationCompleted, userState);
        }

        private void OnTransferirProductoPlanchadoOperationCompleted(object arg)
        {
            if ((this.TransferirProductoPlanchadoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferirProductoPlanchadoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GetNoSerieLavado", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GetNoSerieLavado_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetNoSerieLavado()
        {
            object[] results = this.Invoke("GetNoSerieLavado", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetNoSerieLavado(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetNoSerieLavado", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetNoSerieLavado(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetNoSerieLavadoAsync()
        {
            this.GetNoSerieLavadoAsync(null);
        }

        /// <remarks/>
        public void GetNoSerieLavadoAsync(object userState)
        {
            if ((this.GetNoSerieLavadoOperationCompleted == null))
            {
                this.GetNoSerieLavadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoSerieLavadoOperationCompleted);
            }
            this.InvokeAsync("GetNoSerieLavado", new object[0], this.GetNoSerieLavadoOperationCompleted, userState);
        }

        private void OnGetNoSerieLavadoOperationCompleted(object arg)
        {
            if ((this.GetNoSerieLavadoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoSerieLavadoCompleted(this, new GetNoSerieLavadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovExpedicion", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovExpedicion_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarMovExpedicion(string operario, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov, string cliente, string codProducto, decimal peso, string codCarro, int numCarro, bool completo, string nMov, string turno)
        {
            this.Invoke("GenerarMovExpedicion", new object[] {
                    operario,
                    fechaMov,
                    horaMov,
                    cliente,
                    codProducto,
                    peso,
                    codCarro,
                    numCarro,
                    completo,
                    nMov,
                    turno});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovExpedicion(string operario, System.DateTime fechaMov, System.DateTime horaMov, string cliente, string codProducto, decimal peso, string codCarro, int numCarro, bool completo, string nMov, string turno, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovExpedicion", new object[] {
                    operario,
                    fechaMov,
                    horaMov,
                    cliente,
                    codProducto,
                    peso,
                    codCarro,
                    numCarro,
                    completo,
                    nMov,
                    turno}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarMovExpedicion(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarMovExpedicionAsync(string operario, System.DateTime fechaMov, System.DateTime horaMov, string cliente, string codProducto, decimal peso, string codCarro, int numCarro, bool completo, string nMov, string turno)
        {
            this.GenerarMovExpedicionAsync(operario, fechaMov, horaMov, cliente, codProducto, peso, codCarro, numCarro, completo, nMov, turno, null);
        }

        /// <remarks/>
        public void GenerarMovExpedicionAsync(string operario, System.DateTime fechaMov, System.DateTime horaMov, string cliente, string codProducto, decimal peso, string codCarro, int numCarro, bool completo, string nMov, string turno, object userState)
        {
            if ((this.GenerarMovExpedicionOperationCompleted == null))
            {
                this.GenerarMovExpedicionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovExpedicionOperationCompleted);
            }
            this.InvokeAsync("GenerarMovExpedicion", new object[] {
                    operario,
                    fechaMov,
                    horaMov,
                    cliente,
                    codProducto,
                    peso,
                    codCarro,
                    numCarro,
                    completo,
                    nMov,
                    turno}, this.GenerarMovExpedicionOperationCompleted, userState);
        }

        private void OnGenerarMovExpedicionOperationCompleted(object arg)
        {
            if ((this.GenerarMovExpedicionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovExpedicionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovRechazo", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovRechazo_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarMovRechazo(string codCte, decimal cantidad, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fecha, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime hora, string operario, string subfamilia, string turno)
        {
            this.Invoke("GenerarMovRechazo", new object[] {
                    codCte,
                    cantidad,
                    fecha,
                    hora,
                    operario,
                    subfamilia,
                    turno});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovRechazo(string codCte, decimal cantidad, System.DateTime fecha, System.DateTime hora, string operario, string subfamilia, string turno, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovRechazo", new object[] {
                    codCte,
                    cantidad,
                    fecha,
                    hora,
                    operario,
                    subfamilia,
                    turno}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarMovRechazo(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarMovRechazoAsync(string codCte, decimal cantidad, System.DateTime fecha, System.DateTime hora, string operario, string subfamilia, string turno)
        {
            this.GenerarMovRechazoAsync(codCte, cantidad, fecha, hora, operario, subfamilia, turno, null);
        }

        /// <remarks/>
        public void GenerarMovRechazoAsync(string codCte, decimal cantidad, System.DateTime fecha, System.DateTime hora, string operario, string subfamilia, string turno, object userState)
        {
            if ((this.GenerarMovRechazoOperationCompleted == null))
            {
                this.GenerarMovRechazoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovRechazoOperationCompleted);
            }
            this.InvokeAsync("GenerarMovRechazo", new object[] {
                    codCte,
                    cantidad,
                    fecha,
                    hora,
                    operario,
                    subfamilia,
                    turno}, this.GenerarMovRechazoOperationCompleted, userState);
        }

        private void OnGenerarMovRechazoOperationCompleted(object arg)
        {
            if ((this.GenerarMovRechazoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovRechazoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovProdRechazo", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovProdRechazo_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarMovProdRechazo(int tipo, string codCte, decimal cantidad, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov, string operario, string codProducto, string turno)
        {
            this.Invoke("GenerarMovProdRechazo", new object[] {
                    tipo,
                    codCte,
                    cantidad,
                    fechaMov,
                    horaMov,
                    operario,
                    codProducto,
                    turno});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovProdRechazo(int tipo, string codCte, decimal cantidad, System.DateTime fechaMov, System.DateTime horaMov, string operario, string codProducto, string turno, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovProdRechazo", new object[] {
                    tipo,
                    codCte,
                    cantidad,
                    fechaMov,
                    horaMov,
                    operario,
                    codProducto,
                    turno}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarMovProdRechazo(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarMovProdRechazoAsync(int tipo, string codCte, decimal cantidad, System.DateTime fechaMov, System.DateTime horaMov, string operario, string codProducto, string turno)
        {
            this.GenerarMovProdRechazoAsync(tipo, codCte, cantidad, fechaMov, horaMov, operario, codProducto, turno, null);
        }

        /// <remarks/>
        public void GenerarMovProdRechazoAsync(int tipo, string codCte, decimal cantidad, System.DateTime fechaMov, System.DateTime horaMov, string operario, string codProducto, string turno, object userState)
        {
            if ((this.GenerarMovProdRechazoOperationCompleted == null))
            {
                this.GenerarMovProdRechazoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovProdRechazoOperationCompleted);
            }
            this.InvokeAsync("GenerarMovProdRechazo", new object[] {
                    tipo,
                    codCte,
                    cantidad,
                    fechaMov,
                    horaMov,
                    operario,
                    codProducto,
                    turno}, this.GenerarMovProdRechazoOperationCompleted, userState);
        }

        private void OnGenerarMovProdRechazoOperationCompleted(object arg)
        {
            if ((this.GenerarMovProdRechazoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovProdRechazoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:UltPedVentaAbiertoCte", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "UltPedVentaAbiertoCte_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UltPedVentaAbiertoCte(string cliente)
        {
            object[] results = this.Invoke("UltPedVentaAbiertoCte", new object[] {
                    cliente});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUltPedVentaAbiertoCte(string cliente, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UltPedVentaAbiertoCte", new object[] {
                    cliente}, callback, asyncState);
        }

        /// <remarks/>
        public string EndUltPedVentaAbiertoCte(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UltPedVentaAbiertoCteAsync(string cliente)
        {
            this.UltPedVentaAbiertoCteAsync(cliente, null);
        }

        /// <remarks/>
        public void UltPedVentaAbiertoCteAsync(string cliente, object userState)
        {
            if ((this.UltPedVentaAbiertoCteOperationCompleted == null))
            {
                this.UltPedVentaAbiertoCteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUltPedVentaAbiertoCteOperationCompleted);
            }
            this.InvokeAsync("UltPedVentaAbiertoCte", new object[] {
                    cliente}, this.UltPedVentaAbiertoCteOperationCompleted, userState);
        }

        private void OnUltPedVentaAbiertoCteOperationCompleted(object arg)
        {
            if ((this.UltPedVentaAbiertoCteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UltPedVentaAbiertoCteCompleted(this, new UltPedVentaAbiertoCteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:InsertarLineaPedidoVenta", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "InsertarLineaPedidoVenta_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertarLineaPedidoVenta(string pedido, string producto, decimal cantidad, string nSerie, string almacen)
        {
            this.Invoke("InsertarLineaPedidoVenta", new object[] {
                    pedido,
                    producto,
                    cantidad,
                    nSerie,
                    almacen});
        }

        /// <remarks/>
        public System.IAsyncResult BeginInsertarLineaPedidoVenta(string pedido, string producto, decimal cantidad, string nSerie, string almacen, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InsertarLineaPedidoVenta", new object[] {
                    pedido,
                    producto,
                    cantidad,
                    nSerie,
                    almacen}, callback, asyncState);
        }

        /// <remarks/>
        public void EndInsertarLineaPedidoVenta(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void InsertarLineaPedidoVentaAsync(string pedido, string producto, decimal cantidad, string nSerie, string almacen)
        {
            this.InsertarLineaPedidoVentaAsync(pedido, producto, cantidad, nSerie, almacen, null);
        }

        /// <remarks/>
        public void InsertarLineaPedidoVentaAsync(string pedido, string producto, decimal cantidad, string nSerie, string almacen, object userState)
        {
            if ((this.InsertarLineaPedidoVentaOperationCompleted == null))
            {
                this.InsertarLineaPedidoVentaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertarLineaPedidoVentaOperationCompleted);
            }
            this.InvokeAsync("InsertarLineaPedidoVenta", new object[] {
                    pedido,
                    producto,
                    cantidad,
                    nSerie,
                    almacen}, this.InsertarLineaPedidoVentaOperationCompleted, userState);
        }

        private void OnInsertarLineaPedidoVentaOperationCompleted(object arg)
        {
            if ((this.InsertarLineaPedidoVentaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertarLineaPedidoVentaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarLogInteraccion", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarLogInteraccion_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarLogInteraccion(string cliente, string grupoInteraccion, string plantillaInteracc)
        {
            this.Invoke("GenerarLogInteraccion", new object[] {
                    cliente,
                    grupoInteraccion,
                    plantillaInteracc});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarLogInteraccion(string cliente, string grupoInteraccion, string plantillaInteracc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarLogInteraccion", new object[] {
                    cliente,
                    grupoInteraccion,
                    plantillaInteracc}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarLogInteraccion(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarLogInteraccionAsync(string cliente, string grupoInteraccion, string plantillaInteracc)
        {
            this.GenerarLogInteraccionAsync(cliente, grupoInteraccion, plantillaInteracc, null);
        }

        /// <remarks/>
        public void GenerarLogInteraccionAsync(string cliente, string grupoInteraccion, string plantillaInteracc, object userState)
        {
            if ((this.GenerarLogInteraccionOperationCompleted == null))
            {
                this.GenerarLogInteraccionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarLogInteraccionOperationCompleted);
            }
            this.InvokeAsync("GenerarLogInteraccion", new object[] {
                    cliente,
                    grupoInteraccion,
                    plantillaInteracc}, this.GenerarLogInteraccionOperationCompleted, userState);
        }

        private void OnGenerarLogInteraccionOperationCompleted(object arg)
        {
            if ((this.GenerarLogInteraccionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarLogInteraccionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GetCustomerContact", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GetCustomerContact_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCustomerContact(string custNo)
        {
            object[] results = this.Invoke("GetCustomerContact", new object[] {
                    custNo});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerContact(string custNo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCustomerContact", new object[] {
                    custNo}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCustomerContact(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCustomerContactAsync(string custNo)
        {
            this.GetCustomerContactAsync(custNo, null);
        }

        /// <remarks/>
        public void GetCustomerContactAsync(string custNo, object userState)
        {
            if ((this.GetCustomerContactOperationCompleted == null))
            {
                this.GetCustomerContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerContactOperationCompleted);
            }
            this.InvokeAsync("GetCustomerContact", new object[] {
                    custNo}, this.GetCustomerContactOperationCompleted, userState);
        }

        private void OnGetCustomerContactOperationCompleted(object arg)
        {
            if ((this.GetCustomerContactCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerContactCompleted(this, new GetCustomerContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GetEntryNo", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GetEntryNo_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetEntryNo()
        {
            object[] results = this.Invoke("GetEntryNo", new object[0]);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetEntryNo(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetEntryNo", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public int EndGetEntryNo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetEntryNoAsync()
        {
            this.GetEntryNoAsync(null);
        }

        /// <remarks/>
        public void GetEntryNoAsync(object userState)
        {
            if ((this.GetEntryNoOperationCompleted == null))
            {
                this.GetEntryNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntryNoOperationCompleted);
            }
            this.InvokeAsync("GetEntryNo", new object[0], this.GetEntryNoOperationCompleted, userState);
        }

        private void OnGetEntryNoOperationCompleted(object arg)
        {
            if ((this.GetEntryNoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntryNoCompleted(this, new GetEntryNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarPedidoAdelantado", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarPedidoAdelantado_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerarPedidoAdelantado(string cliente)
        {
            object[] results = this.Invoke("GenerarPedidoAdelantado", new object[] {
                    cliente});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarPedidoAdelantado(string cliente, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarPedidoAdelantado", new object[] {
                    cliente}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGenerarPedidoAdelantado(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GenerarPedidoAdelantadoAsync(string cliente)
        {
            this.GenerarPedidoAdelantadoAsync(cliente, null);
        }

        /// <remarks/>
        public void GenerarPedidoAdelantadoAsync(string cliente, object userState)
        {
            if ((this.GenerarPedidoAdelantadoOperationCompleted == null))
            {
                this.GenerarPedidoAdelantadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarPedidoAdelantadoOperationCompleted);
            }
            this.InvokeAsync("GenerarPedidoAdelantado", new object[] {
                    cliente}, this.GenerarPedidoAdelantadoOperationCompleted, userState);
        }

        private void OnGenerarPedidoAdelantadoOperationCompleted(object arg)
        {
            if ((this.GenerarPedidoAdelantadoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarPedidoAdelantadoCompleted(this, new GenerarPedidoAdelantadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovConteo", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovConteo_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GenerarMovConteo(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            object[] results = this.Invoke("GenerarMovConteo", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov,
                    fechaMov,
                    horaMov});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovConteo(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovConteo", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGenerarMovConteo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GenerarMovConteoAsync(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.GenerarMovConteoAsync(codCte, codProd, cantidad, numSerie, tipoMov, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void GenerarMovConteoAsync(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.GenerarMovConteoOperationCompleted == null))
            {
                this.GenerarMovConteoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovConteoOperationCompleted);
            }
            this.InvokeAsync("GenerarMovConteo", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov,
                    fechaMov,
                    horaMov}, this.GenerarMovConteoOperationCompleted, userState);
        }

        private void OnGenerarMovConteoOperationCompleted(object arg)
        {
            if ((this.GenerarMovConteoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovConteoCompleted(this, new GenerarMovConteoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:TransferirProductoConCont" +
            "eo", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "TransferirProductoConConteo_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferirProductoConConteo(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov)
        {
            this.Invoke("TransferirProductoConConteo", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov});
        }

        /// <remarks/>
        public System.IAsyncResult BeginTransferirProductoConConteo(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("TransferirProductoConConteo", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov}, callback, asyncState);
        }

        /// <remarks/>
        public void EndTransferirProductoConConteo(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void TransferirProductoConConteoAsync(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov)
        {
            this.TransferirProductoConConteoAsync(codCte, codProd, cantidad, numSerie, tipoMov, null);
        }

        /// <remarks/>
        public void TransferirProductoConConteoAsync(string codCte, string codProd, decimal cantidad, string numSerie, int tipoMov, object userState)
        {
            if ((this.TransferirProductoConConteoOperationCompleted == null))
            {
                this.TransferirProductoConConteoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferirProductoConConteoOperationCompleted);
            }
            this.InvokeAsync("TransferirProductoConConteo", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    tipoMov}, this.TransferirProductoConConteoOperationCompleted, userState);
        }

        private void OnTransferirProductoConConteoOperationCompleted(object arg)
        {
            if ((this.TransferirProductoConConteoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferirProductoConConteoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:SelecAlmacen", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "SelecAlmacen_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SelecAlmacen(string cliente, int tipoMov, bool pedido)
        {
            object[] results = this.Invoke("SelecAlmacen", new object[] {
                    cliente,
                    tipoMov,
                    pedido});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSelecAlmacen(string cliente, int tipoMov, bool pedido, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SelecAlmacen", new object[] {
                    cliente,
                    tipoMov,
                    pedido}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSelecAlmacen(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SelecAlmacenAsync(string cliente, int tipoMov, bool pedido)
        {
            this.SelecAlmacenAsync(cliente, tipoMov, pedido, null);
        }

        /// <remarks/>
        public void SelecAlmacenAsync(string cliente, int tipoMov, bool pedido, object userState)
        {
            if ((this.SelecAlmacenOperationCompleted == null))
            {
                this.SelecAlmacenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelecAlmacenOperationCompleted);
            }
            this.InvokeAsync("SelecAlmacen", new object[] {
                    cliente,
                    tipoMov,
                    pedido}, this.SelecAlmacenOperationCompleted, userState);
        }

        private void OnSelecAlmacenOperationCompleted(object arg)
        {
            if ((this.SelecAlmacenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelecAlmacenCompleted(this, new SelecAlmacenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarPedidoCliente", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarPedidoCliente_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerarPedidoCliente(string codCte, string codProd, decimal cantidad, string numSerie, string almacenOrigen)
        {
            object[] results = this.Invoke("GenerarPedidoCliente", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    almacenOrigen});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarPedidoCliente(string codCte, string codProd, decimal cantidad, string numSerie, string almacenOrigen, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarPedidoCliente", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    almacenOrigen}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGenerarPedidoCliente(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GenerarPedidoClienteAsync(string codCte, string codProd, decimal cantidad, string numSerie, string almacenOrigen)
        {
            this.GenerarPedidoClienteAsync(codCte, codProd, cantidad, numSerie, almacenOrigen, null);
        }

        /// <remarks/>
        public void GenerarPedidoClienteAsync(string codCte, string codProd, decimal cantidad, string numSerie, string almacenOrigen, object userState)
        {
            if ((this.GenerarPedidoClienteOperationCompleted == null))
            {
                this.GenerarPedidoClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarPedidoClienteOperationCompleted);
            }
            this.InvokeAsync("GenerarPedidoCliente", new object[] {
                    codCte,
                    codProd,
                    cantidad,
                    numSerie,
                    almacenOrigen}, this.GenerarPedidoClienteOperationCompleted, userState);
        }

        private void OnGenerarPedidoClienteOperationCompleted(object arg)
        {
            if ((this.GenerarPedidoClienteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarPedidoClienteCompleted(this, new GenerarPedidoClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovPesaje", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovPesaje_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerarMovPesaje(string empleado, string turno, string cliente, string pedido, string producto, string nSerie, decimal peso, int nCarro, string codCarro, bool completo, bool consolidado, bool expedicion, int uds, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            object[] results = this.Invoke("GenerarMovPesaje", new object[] {
                    empleado,
                    turno,
                    cliente,
                    pedido,
                    producto,
                    nSerie,
                    peso,
                    nCarro,
                    codCarro,
                    completo,
                    consolidado,
                    expedicion,
                    uds,
                    fechaMov,
                    horaMov});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovPesaje(
                    string empleado,
                    string turno,
                    string cliente,
                    string pedido,
                    string producto,
                    string nSerie,
                    decimal peso,
                    int nCarro,
                    string codCarro,
                    bool completo,
                    bool consolidado,
                    bool expedicion,
                    int uds,
                    System.DateTime fechaMov,
                    System.DateTime horaMov,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("GenerarMovPesaje", new object[] {
                    empleado,
                    turno,
                    cliente,
                    pedido,
                    producto,
                    nSerie,
                    peso,
                    nCarro,
                    codCarro,
                    completo,
                    consolidado,
                    expedicion,
                    uds,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGenerarMovPesaje(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GenerarMovPesajeAsync(string empleado, string turno, string cliente, string pedido, string producto, string nSerie, decimal peso, int nCarro, string codCarro, bool completo, bool consolidado, bool expedicion, int uds, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.GenerarMovPesajeAsync(empleado, turno, cliente, pedido, producto, nSerie, peso, nCarro, codCarro, completo, consolidado, expedicion, uds, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void GenerarMovPesajeAsync(
                    string empleado,
                    string turno,
                    string cliente,
                    string pedido,
                    string producto,
                    string nSerie,
                    decimal peso,
                    int nCarro,
                    string codCarro,
                    bool completo,
                    bool consolidado,
                    bool expedicion,
                    int uds,
                    System.DateTime fechaMov,
                    System.DateTime horaMov,
                    object userState)
        {
            if ((this.GenerarMovPesajeOperationCompleted == null))
            {
                this.GenerarMovPesajeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovPesajeOperationCompleted);
            }
            this.InvokeAsync("GenerarMovPesaje", new object[] {
                    empleado,
                    turno,
                    cliente,
                    pedido,
                    producto,
                    nSerie,
                    peso,
                    nCarro,
                    codCarro,
                    completo,
                    consolidado,
                    expedicion,
                    uds,
                    fechaMov,
                    horaMov}, this.GenerarMovPesajeOperationCompleted, userState);
        }

        private void OnGenerarMovPesajeOperationCompleted(object arg)
        {
            if ((this.GenerarMovPesajeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovPesajeCompleted(this, new GenerarMovPesajeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:ActualizarMovProdPesaje", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "ActualizarMovProdPesaje_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ActualizarMovProdPesaje(string nMov, bool completo)
        {
            this.Invoke("ActualizarMovProdPesaje", new object[] {
                    nMov,
                    completo});
        }

        /// <remarks/>
        public System.IAsyncResult BeginActualizarMovProdPesaje(string nMov, bool completo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ActualizarMovProdPesaje", new object[] {
                    nMov,
                    completo}, callback, asyncState);
        }

        /// <remarks/>
        public void EndActualizarMovProdPesaje(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ActualizarMovProdPesajeAsync(string nMov, bool completo)
        {
            this.ActualizarMovProdPesajeAsync(nMov, completo, null);
        }

        /// <remarks/>
        public void ActualizarMovProdPesajeAsync(string nMov, bool completo, object userState)
        {
            if ((this.ActualizarMovProdPesajeOperationCompleted == null))
            {
                this.ActualizarMovProdPesajeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActualizarMovProdPesajeOperationCompleted);
            }
            this.InvokeAsync("ActualizarMovProdPesaje", new object[] {
                    nMov,
                    completo}, this.ActualizarMovProdPesajeOperationCompleted, userState);
        }

        private void OnActualizarMovProdPesajeOperationCompleted(object arg)
        {
            if ((this.ActualizarMovProdPesajeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActualizarMovProdPesajeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:EliminarMovProdPesaje", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "EliminarMovProdPesaje_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EliminarMovProdPesaje(string nMov)
        {
            this.Invoke("EliminarMovProdPesaje", new object[] {
                    nMov});
        }

        /// <remarks/>
        public System.IAsyncResult BeginEliminarMovProdPesaje(string nMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EliminarMovProdPesaje", new object[] {
                    nMov}, callback, asyncState);
        }

        /// <remarks/>
        public void EndEliminarMovProdPesaje(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void EliminarMovProdPesajeAsync(string nMov)
        {
            this.EliminarMovProdPesajeAsync(nMov, null);
        }

        /// <remarks/>
        public void EliminarMovProdPesajeAsync(string nMov, object userState)
        {
            if ((this.EliminarMovProdPesajeOperationCompleted == null))
            {
                this.EliminarMovProdPesajeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEliminarMovProdPesajeOperationCompleted);
            }
            this.InvokeAsync("EliminarMovProdPesaje", new object[] {
                    nMov}, this.EliminarMovProdPesajeOperationCompleted, userState);
        }

        private void OnEliminarMovProdPesajeOperationCompleted(object arg)
        {
            if ((this.EliminarMovProdPesajeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EliminarMovProdPesajeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:RegistrarPedidoVenta", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "RegistrarPedidoVenta_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegistrarPedidoVenta(string numPedido)
        {
            this.Invoke("RegistrarPedidoVenta", new object[] {
                    numPedido});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRegistrarPedidoVenta(string numPedido, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RegistrarPedidoVenta", new object[] {
                    numPedido}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRegistrarPedidoVenta(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RegistrarPedidoVentaAsync(string numPedido)
        {
            this.RegistrarPedidoVentaAsync(numPedido, null);
        }

        /// <remarks/>
        public void RegistrarPedidoVentaAsync(string numPedido, object userState)
        {
            if ((this.RegistrarPedidoVentaOperationCompleted == null))
            {
                this.RegistrarPedidoVentaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistrarPedidoVentaOperationCompleted);
            }
            this.InvokeAsync("RegistrarPedidoVenta", new object[] {
                    numPedido}, this.RegistrarPedidoVentaOperationCompleted, userState);
        }

        private void OnRegistrarPedidoVentaOperationCompleted(object arg)
        {
            if ((this.RegistrarPedidoVentaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistrarPedidoVentaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:Rechazar", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "Rechazar_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Rechazar(string turno, decimal kilos, string tipoCarro, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            this.Invoke("Rechazar", new object[] {
                    turno,
                    kilos,
                    tipoCarro,
                    fechaMov,
                    horaMov});
        }

        /// <remarks/>
        public System.IAsyncResult BeginRechazar(string turno, decimal kilos, string tipoCarro, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Rechazar", new object[] {
                    turno,
                    kilos,
                    tipoCarro,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public void EndRechazar(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void RechazarAsync(string turno, decimal kilos, string tipoCarro, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.RechazarAsync(turno, kilos, tipoCarro, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void RechazarAsync(string turno, decimal kilos, string tipoCarro, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.RechazarOperationCompleted == null))
            {
                this.RechazarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRechazarOperationCompleted);
            }
            this.InvokeAsync("Rechazar", new object[] {
                    turno,
                    kilos,
                    tipoCarro,
                    fechaMov,
                    horaMov}, this.RechazarOperationCompleted, userState);
        }

        private void OnRechazarOperationCompleted(object arg)
        {
            if ((this.RechazarCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RechazarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:ACostura", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "ACostura_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ACostura(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            this.Invoke("ACostura", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov});
        }

        /// <remarks/>
        public System.IAsyncResult BeginACostura(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ACostura", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public void EndACostura(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ACosturaAsync(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.ACosturaAsync(cliente, pedido, producto, cantidad, turno, operario, nSerie, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void ACosturaAsync(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.ACosturaOperationCompleted == null))
            {
                this.ACosturaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnACosturaOperationCompleted);
            }
            this.InvokeAsync("ACostura", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov}, this.ACosturaOperationCompleted, userState);
        }

        private void OnACosturaOperationCompleted(object arg)
        {
            if ((this.ACosturaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ACosturaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:AOxido", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "AOxido_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AOxido(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            this.Invoke("AOxido", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAOxido(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AOxido", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAOxido(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AOxidoAsync(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.AOxidoAsync(cliente, pedido, producto, cantidad, turno, operario, nSerie, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void AOxidoAsync(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.AOxidoOperationCompleted == null))
            {
                this.AOxidoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAOxidoOperationCompleted);
            }
            this.InvokeAsync("AOxido", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov}, this.AOxidoOperationCompleted, userState);
        }

        private void OnAOxidoOperationCompleted(object arg)
        {
            if ((this.AOxidoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AOxidoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GetAlmacenPorCliente", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GetAlmacenPorCliente_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAlmacenPorCliente(string cliente)
        {
            object[] results = this.Invoke("GetAlmacenPorCliente", new object[] {
                    cliente});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAlmacenPorCliente(string cliente, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAlmacenPorCliente", new object[] {
                    cliente}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAlmacenPorCliente(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAlmacenPorClienteAsync(string cliente)
        {
            this.GetAlmacenPorClienteAsync(cliente, null);
        }

        /// <remarks/>
        public void GetAlmacenPorClienteAsync(string cliente, object userState)
        {
            if ((this.GetAlmacenPorClienteOperationCompleted == null))
            {
                this.GetAlmacenPorClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlmacenPorClienteOperationCompleted);
            }
            this.InvokeAsync("GetAlmacenPorCliente", new object[] {
                    cliente}, this.GetAlmacenPorClienteOperationCompleted, userState);
        }

        private void OnGetAlmacenPorClienteOperationCompleted(object arg)
        {
            if ((this.GetAlmacenPorClienteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlmacenPorClienteCompleted(this, new GetAlmacenPorClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GetAlmacenPorTipo", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GetAlmacenPorTipo_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAlmacenPorTipo(int tipoRechazo)
        {
            object[] results = this.Invoke("GetAlmacenPorTipo", new object[] {
                    tipoRechazo});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAlmacenPorTipo(int tipoRechazo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAlmacenPorTipo", new object[] {
                    tipoRechazo}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAlmacenPorTipo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAlmacenPorTipoAsync(int tipoRechazo)
        {
            this.GetAlmacenPorTipoAsync(tipoRechazo, null);
        }

        /// <remarks/>
        public void GetAlmacenPorTipoAsync(int tipoRechazo, object userState)
        {
            if ((this.GetAlmacenPorTipoOperationCompleted == null))
            {
                this.GetAlmacenPorTipoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlmacenPorTipoOperationCompleted);
            }
            this.InvokeAsync("GetAlmacenPorTipo", new object[] {
                    tipoRechazo}, this.GetAlmacenPorTipoOperationCompleted, userState);
        }

        private void OnGetAlmacenPorTipoOperationCompleted(object arg)
        {
            if ((this.GetAlmacenPorTipoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlmacenPorTipoCompleted(this, new GetAlmacenPorTipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GetInternalCustomer", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GetInternalCustomer_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetInternalCustomer(string tipo)
        {
            object[] results = this.Invoke("GetInternalCustomer", new object[] {
                    tipo});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInternalCustomer(string tipo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInternalCustomer", new object[] {
                    tipo}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetInternalCustomer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInternalCustomerAsync(string tipo)
        {
            this.GetInternalCustomerAsync(tipo, null);
        }

        /// <remarks/>
        public void GetInternalCustomerAsync(string tipo, object userState)
        {
            if ((this.GetInternalCustomerOperationCompleted == null))
            {
                this.GetInternalCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInternalCustomerOperationCompleted);
            }
            this.InvokeAsync("GetInternalCustomer", new object[] {
                    tipo}, this.GetInternalCustomerOperationCompleted, userState);
        }

        private void OnGetInternalCustomerOperationCompleted(object arg)
        {
            if ((this.GetInternalCustomerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInternalCustomerCompleted(this, new GetInternalCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GetNumMovGenerado", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GetNumMovGenerado_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetNumMovGenerado()
        {
            object[] results = this.Invoke("GetNumMovGenerado", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetNumMovGenerado(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetNumMovGenerado", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetNumMovGenerado(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetNumMovGeneradoAsync()
        {
            this.GetNumMovGeneradoAsync(null);
        }

        /// <remarks/>
        public void GetNumMovGeneradoAsync(object userState)
        {
            if ((this.GetNumMovGeneradoOperationCompleted == null))
            {
                this.GetNumMovGeneradoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumMovGeneradoOperationCompleted);
            }
            this.InvokeAsync("GetNumMovGenerado", new object[0], this.GetNumMovGeneradoOperationCompleted, userState);
        }

        private void OnGetNumMovGeneradoOperationCompleted(object arg)
        {
            if ((this.GetNumMovGeneradoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumMovGeneradoCompleted(this, new GetNumMovGeneradoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:EliminarEtiquetaProcesada" +
            "", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "EliminarEtiquetaProcesada_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EliminarEtiquetaProcesada(string idInforme, string idUsuario, int correlativo)
        {
            this.Invoke("EliminarEtiquetaProcesada", new object[] {
                    idInforme,
                    idUsuario,
                    correlativo});
        }

        /// <remarks/>
        public System.IAsyncResult BeginEliminarEtiquetaProcesada(string idInforme, string idUsuario, int correlativo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EliminarEtiquetaProcesada", new object[] {
                    idInforme,
                    idUsuario,
                    correlativo}, callback, asyncState);
        }

        /// <remarks/>
        public void EndEliminarEtiquetaProcesada(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void EliminarEtiquetaProcesadaAsync(string idInforme, string idUsuario, int correlativo)
        {
            this.EliminarEtiquetaProcesadaAsync(idInforme, idUsuario, correlativo, null);
        }

        /// <remarks/>
        public void EliminarEtiquetaProcesadaAsync(string idInforme, string idUsuario, int correlativo, object userState)
        {
            if ((this.EliminarEtiquetaProcesadaOperationCompleted == null))
            {
                this.EliminarEtiquetaProcesadaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEliminarEtiquetaProcesadaOperationCompleted);
            }
            this.InvokeAsync("EliminarEtiquetaProcesada", new object[] {
                    idInforme,
                    idUsuario,
                    correlativo}, this.EliminarEtiquetaProcesadaOperationCompleted, userState);
        }

        private void OnEliminarEtiquetaProcesadaOperationCompleted(object arg)
        {
            if ((this.EliminarEtiquetaProcesadaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EliminarEtiquetaProcesadaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:InsertarRegistroEtiqueta", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "InsertarRegistroEtiqueta_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertarRegistroEtiqueta(string codCliente, string nomCliente, string codProducto, string desProducto, string numPedido, decimal nCarro, int cantidad, string tipoEtiqueta, string idEquipo)
        {
            this.Invoke("InsertarRegistroEtiqueta", new object[] {
                    codCliente,
                    nomCliente,
                    codProducto,
                    desProducto,
                    numPedido,
                    nCarro,
                    cantidad,
                    tipoEtiqueta,
                    idEquipo});
        }

        /// <remarks/>
        public System.IAsyncResult BeginInsertarRegistroEtiqueta(string codCliente, string nomCliente, string codProducto, string desProducto, string numPedido, decimal nCarro, int cantidad, string tipoEtiqueta, string idEquipo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InsertarRegistroEtiqueta", new object[] {
                    codCliente,
                    nomCliente,
                    codProducto,
                    desProducto,
                    numPedido,
                    nCarro,
                    cantidad,
                    tipoEtiqueta,
                    idEquipo}, callback, asyncState);
        }

        /// <remarks/>
        public void EndInsertarRegistroEtiqueta(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void InsertarRegistroEtiquetaAsync(string codCliente, string nomCliente, string codProducto, string desProducto, string numPedido, decimal nCarro, int cantidad, string tipoEtiqueta, string idEquipo)
        {
            this.InsertarRegistroEtiquetaAsync(codCliente, nomCliente, codProducto, desProducto, numPedido, nCarro, cantidad, tipoEtiqueta, idEquipo, null);
        }

        /// <remarks/>
        public void InsertarRegistroEtiquetaAsync(string codCliente, string nomCliente, string codProducto, string desProducto, string numPedido, decimal nCarro, int cantidad, string tipoEtiqueta, string idEquipo, object userState)
        {
            if ((this.InsertarRegistroEtiquetaOperationCompleted == null))
            {
                this.InsertarRegistroEtiquetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertarRegistroEtiquetaOperationCompleted);
            }
            this.InvokeAsync("InsertarRegistroEtiqueta", new object[] {
                    codCliente,
                    nomCliente,
                    codProducto,
                    desProducto,
                    numPedido,
                    nCarro,
                    cantidad,
                    tipoEtiqueta,
                    idEquipo}, this.InsertarRegistroEtiquetaOperationCompleted, userState);
        }

        private void OnInsertarRegistroEtiquetaOperationCompleted(object arg)
        {
            if ((this.InsertarRegistroEtiquetaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertarRegistroEtiquetaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:ObtenerCorrelativo", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "ObtenerCorrelativo_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int ObtenerCorrelativo(string idInforme, string idEquipo)
        {
            object[] results = this.Invoke("ObtenerCorrelativo", new object[] {
                    idInforme,
                    idEquipo});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginObtenerCorrelativo(string idInforme, string idEquipo, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ObtenerCorrelativo", new object[] {
                    idInforme,
                    idEquipo}, callback, asyncState);
        }

        /// <remarks/>
        public int EndObtenerCorrelativo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void ObtenerCorrelativoAsync(string idInforme, string idEquipo)
        {
            this.ObtenerCorrelativoAsync(idInforme, idEquipo, null);
        }

        /// <remarks/>
        public void ObtenerCorrelativoAsync(string idInforme, string idEquipo, object userState)
        {
            if ((this.ObtenerCorrelativoOperationCompleted == null))
            {
                this.ObtenerCorrelativoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerCorrelativoOperationCompleted);
            }
            this.InvokeAsync("ObtenerCorrelativo", new object[] {
                    idInforme,
                    idEquipo}, this.ObtenerCorrelativoOperationCompleted, userState);
        }

        private void OnObtenerCorrelativoOperationCompleted(object arg)
        {
            if ((this.ObtenerCorrelativoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerCorrelativoCompleted(this, new ObtenerCorrelativoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:AjusteProductoAlmacen", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "AjusteProductoAlmacen_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AjusteProductoAlmacen(string almacen, string producto, decimal cantidad, string templName, string batchName)
        {
            this.Invoke("AjusteProductoAlmacen", new object[] {
                    almacen,
                    producto,
                    cantidad,
                    templName,
                    batchName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAjusteProductoAlmacen(string almacen, string producto, decimal cantidad, string templName, string batchName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AjusteProductoAlmacen", new object[] {
                    almacen,
                    producto,
                    cantidad,
                    templName,
                    batchName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAjusteProductoAlmacen(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AjusteProductoAlmacenAsync(string almacen, string producto, decimal cantidad, string templName, string batchName)
        {
            this.AjusteProductoAlmacenAsync(almacen, producto, cantidad, templName, batchName, null);
        }

        /// <remarks/>
        public void AjusteProductoAlmacenAsync(string almacen, string producto, decimal cantidad, string templName, string batchName, object userState)
        {
            if ((this.AjusteProductoAlmacenOperationCompleted == null))
            {
                this.AjusteProductoAlmacenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAjusteProductoAlmacenOperationCompleted);
            }
            this.InvokeAsync("AjusteProductoAlmacen", new object[] {
                    almacen,
                    producto,
                    cantidad,
                    templName,
                    batchName}, this.AjusteProductoAlmacenOperationCompleted, userState);
        }

        private void OnAjusteProductoAlmacenOperationCompleted(object arg)
        {
            if ((this.AjusteProductoAlmacenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AjusteProductoAlmacenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenRegMovSubcontr", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenRegMovSubcontr_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenRegMovSubcontr(string lavCliente, string codCliente, decimal qty, int tipoReg, string pedido, int linea)
        {
            this.Invoke("GenRegMovSubcontr", new object[] {
                    lavCliente,
                    codCliente,
                    qty,
                    tipoReg,
                    pedido,
                    linea});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenRegMovSubcontr(string lavCliente, string codCliente, decimal qty, int tipoReg, string pedido, int linea, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenRegMovSubcontr", new object[] {
                    lavCliente,
                    codCliente,
                    qty,
                    tipoReg,
                    pedido,
                    linea}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenRegMovSubcontr(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenRegMovSubcontrAsync(string lavCliente, string codCliente, decimal qty, int tipoReg, string pedido, int linea)
        {
            this.GenRegMovSubcontrAsync(lavCliente, codCliente, qty, tipoReg, pedido, linea, null);
        }

        /// <remarks/>
        public void GenRegMovSubcontrAsync(string lavCliente, string codCliente, decimal qty, int tipoReg, string pedido, int linea, object userState)
        {
            if ((this.GenRegMovSubcontrOperationCompleted == null))
            {
                this.GenRegMovSubcontrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenRegMovSubcontrOperationCompleted);
            }
            this.InvokeAsync("GenRegMovSubcontr", new object[] {
                    lavCliente,
                    codCliente,
                    qty,
                    tipoReg,
                    pedido,
                    linea}, this.GenRegMovSubcontrOperationCompleted, userState);
        }

        private void OnGenRegMovSubcontrOperationCompleted(object arg)
        {
            if ((this.GenRegMovSubcontrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenRegMovSubcontrCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:SalidaCostura", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "SalidaCostura_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalidaCostura(string empleado, string turno, string cliente, string producto, string nSerie, decimal uds, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov, string operacion)
        {
            this.Invoke("SalidaCostura", new object[] {
                    empleado,
                    turno,
                    cliente,
                    producto,
                    nSerie,
                    uds,
                    fechaMov,
                    horaMov,
                    operacion});
        }

        /// <remarks/>
        public System.IAsyncResult BeginSalidaCostura(string empleado, string turno, string cliente, string producto, string nSerie, decimal uds, System.DateTime fechaMov, System.DateTime horaMov, string operacion, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SalidaCostura", new object[] {
                    empleado,
                    turno,
                    cliente,
                    producto,
                    nSerie,
                    uds,
                    fechaMov,
                    horaMov,
                    operacion}, callback, asyncState);
        }

        /// <remarks/>
        public void EndSalidaCostura(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void SalidaCosturaAsync(string empleado, string turno, string cliente, string producto, string nSerie, decimal uds, System.DateTime fechaMov, System.DateTime horaMov, string operacion)
        {
            this.SalidaCosturaAsync(empleado, turno, cliente, producto, nSerie, uds, fechaMov, horaMov, operacion, null);
        }

        /// <remarks/>
        public void SalidaCosturaAsync(string empleado, string turno, string cliente, string producto, string nSerie, decimal uds, System.DateTime fechaMov, System.DateTime horaMov, string operacion, object userState)
        {
            if ((this.SalidaCosturaOperationCompleted == null))
            {
                this.SalidaCosturaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalidaCosturaOperationCompleted);
            }
            this.InvokeAsync("SalidaCostura", new object[] {
                    empleado,
                    turno,
                    cliente,
                    producto,
                    nSerie,
                    uds,
                    fechaMov,
                    horaMov,
                    operacion}, this.SalidaCosturaOperationCompleted, userState);
        }

        private void OnSalidaCosturaOperationCompleted(object arg)
        {
            if ((this.SalidaCosturaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalidaCosturaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:AlmacenClientePresente", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "AlmacenClientePresente_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AlmacenClientePresente(string almOrigen, string almDestino, ref string almAjuste, ref int tipoAjuste)
        {
            object[] results = this.Invoke("AlmacenClientePresente", new object[] {
                    almOrigen,
                    almDestino,
                    almAjuste,
                    tipoAjuste});
            almAjuste = ((string)(results[1]));
            tipoAjuste = ((int)(results[2]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAlmacenClientePresente(string almOrigen, string almDestino, string almAjuste, int tipoAjuste, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AlmacenClientePresente", new object[] {
                    almOrigen,
                    almDestino,
                    almAjuste,
                    tipoAjuste}, callback, asyncState);
        }

        /// <remarks/>
        public string EndAlmacenClientePresente(System.IAsyncResult asyncResult, out string almAjuste, out int tipoAjuste)
        {
            object[] results = this.EndInvoke(asyncResult);
            almAjuste = ((string)(results[1]));
            tipoAjuste = ((int)(results[2]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AlmacenClientePresenteAsync(string almOrigen, string almDestino, string almAjuste, int tipoAjuste)
        {
            this.AlmacenClientePresenteAsync(almOrigen, almDestino, almAjuste, tipoAjuste, null);
        }

        /// <remarks/>
        public void AlmacenClientePresenteAsync(string almOrigen, string almDestino, string almAjuste, int tipoAjuste, object userState)
        {
            if ((this.AlmacenClientePresenteOperationCompleted == null))
            {
                this.AlmacenClientePresenteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlmacenClientePresenteOperationCompleted);
            }
            this.InvokeAsync("AlmacenClientePresente", new object[] {
                    almOrigen,
                    almDestino,
                    almAjuste,
                    tipoAjuste}, this.AlmacenClientePresenteOperationCompleted, userState);
        }

        private void OnAlmacenClientePresenteOperationCompleted(object arg)
        {
            if ((this.AlmacenClientePresenteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlmacenClientePresenteCompleted(this, new AlmacenClientePresenteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:DeOxidoACostura", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "DeOxidoACostura_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeOxidoACostura(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov)
        {
            this.Invoke("DeOxidoACostura", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov});
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeOxidoACostura(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeOxidoACostura", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov}, callback, asyncState);
        }

        /// <remarks/>
        public void EndDeOxidoACostura(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void DeOxidoACosturaAsync(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov)
        {
            this.DeOxidoACosturaAsync(cliente, pedido, producto, cantidad, turno, operario, nSerie, fechaMov, horaMov, null);
        }

        /// <remarks/>
        public void DeOxidoACosturaAsync(string cliente, string pedido, string producto, int cantidad, string turno, string operario, string nSerie, System.DateTime fechaMov, System.DateTime horaMov, object userState)
        {
            if ((this.DeOxidoACosturaOperationCompleted == null))
            {
                this.DeOxidoACosturaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeOxidoACosturaOperationCompleted);
            }
            this.InvokeAsync("DeOxidoACostura", new object[] {
                    cliente,
                    pedido,
                    producto,
                    cantidad,
                    turno,
                    operario,
                    nSerie,
                    fechaMov,
                    horaMov}, this.DeOxidoACosturaOperationCompleted, userState);
        }

        private void OnDeOxidoACosturaOperationCompleted(object arg)
        {
            if ((this.DeOxidoACosturaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeOxidoACosturaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:EmpresaCliente", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "EmpresaCliente_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EmpresaCliente(string codCliente)
        {
            object[] results = this.Invoke("EmpresaCliente", new object[] {
                    codCliente});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginEmpresaCliente(string codCliente, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EmpresaCliente", new object[] {
                    codCliente}, callback, asyncState);
        }

        /// <remarks/>
        public string EndEmpresaCliente(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void EmpresaClienteAsync(string codCliente)
        {
            this.EmpresaClienteAsync(codCliente, null);
        }

        /// <remarks/>
        public void EmpresaClienteAsync(string codCliente, object userState)
        {
            if ((this.EmpresaClienteOperationCompleted == null))
            {
                this.EmpresaClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmpresaClienteOperationCompleted);
            }
            this.InvokeAsync("EmpresaCliente", new object[] {
                    codCliente}, this.EmpresaClienteOperationCompleted, userState);
        }

        private void OnEmpresaClienteOperationCompleted(object arg)
        {
            if ((this.EmpresaClienteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmpresaClienteCompleted(this, new EmpresaClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion:GenerarMovUniformidad", RequestNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", ResponseElementName = "GenerarMovUniformidad_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/codeunit/FuncFabricacion", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarMovUniformidad(string codOperario, [System.Xml.Serialization.XmlElementAttribute(DataType = "date")] System.DateTime fechaMov, [System.Xml.Serialization.XmlElementAttribute(DataType = "time")] System.DateTime horaMov, string turno, string cliente, string pedido, string producto, string nSerie, decimal cantidad)
        {
            this.Invoke("GenerarMovUniformidad", new object[] {
                    codOperario,
                    fechaMov,
                    horaMov,
                    turno,
                    cliente,
                    pedido,
                    producto,
                    nSerie,
                    cantidad});
        }

        /// <remarks/>
        public System.IAsyncResult BeginGenerarMovUniformidad(string codOperario, System.DateTime fechaMov, System.DateTime horaMov, string turno, string cliente, string pedido, string producto, string nSerie, decimal cantidad, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GenerarMovUniformidad", new object[] {
                    codOperario,
                    fechaMov,
                    horaMov,
                    turno,
                    cliente,
                    pedido,
                    producto,
                    nSerie,
                    cantidad}, callback, asyncState);
        }

        /// <remarks/>
        public void EndGenerarMovUniformidad(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void GenerarMovUniformidadAsync(string codOperario, System.DateTime fechaMov, System.DateTime horaMov, string turno, string cliente, string pedido, string producto, string nSerie, decimal cantidad)
        {
            this.GenerarMovUniformidadAsync(codOperario, fechaMov, horaMov, turno, cliente, pedido, producto, nSerie, cantidad, null);
        }

        /// <remarks/>
        public void GenerarMovUniformidadAsync(string codOperario, System.DateTime fechaMov, System.DateTime horaMov, string turno, string cliente, string pedido, string producto, string nSerie, decimal cantidad, object userState)
        {
            if ((this.GenerarMovUniformidadOperationCompleted == null))
            {
                this.GenerarMovUniformidadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarMovUniformidadOperationCompleted);
            }
            this.InvokeAsync("GenerarMovUniformidad", new object[] {
                    codOperario,
                    fechaMov,
                    horaMov,
                    turno,
                    cliente,
                    pedido,
                    producto,
                    nSerie,
                    cantidad}, this.GenerarMovUniformidadOperationCompleted, userState);
        }

        private void OnGenerarMovUniformidadOperationCompleted(object arg)
        {
            if ((this.GenerarMovUniformidadCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarMovUniformidadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovRecepcionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovLavadoraCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovTunelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovDesaprestadoCompletedEventHandler(object sender, GenerarMovDesaprestadoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarMovDesaprestadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GenerarMovDesaprestadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void LoginWebCompletedEventHandler(object sender, LoginWebCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal LoginWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void InventProdAlmacenCompletedEventHandler(object sender, InventProdAlmacenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InventProdAlmacenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InventProdAlmacenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ValidarSexagesimalCompletedEventHandler(object sender, ValidarSexagesimalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidarSexagesimalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ValidarSexagesimalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public decimal vSexagesimal
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovPlanchadoCompletedEventHandler(object sender, GenerarMovPlanchadoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarMovPlanchadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GenerarMovPlanchadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void TransferirProductoPlanchadoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetNoSerieLavadoCompletedEventHandler(object sender, GetNoSerieLavadoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoSerieLavadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetNoSerieLavadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovExpedicionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovRechazoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovProdRechazoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UltPedVentaAbiertoCteCompletedEventHandler(object sender, UltPedVentaAbiertoCteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UltPedVentaAbiertoCteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UltPedVentaAbiertoCteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void InsertarLineaPedidoVentaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarLogInteraccionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetCustomerContactCompletedEventHandler(object sender, GetCustomerContactCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCustomerContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetEntryNoCompletedEventHandler(object sender, GetEntryNoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntryNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetEntryNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarPedidoAdelantadoCompletedEventHandler(object sender, GenerarPedidoAdelantadoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarPedidoAdelantadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GenerarPedidoAdelantadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovConteoCompletedEventHandler(object sender, GenerarMovConteoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarMovConteoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GenerarMovConteoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void TransferirProductoConConteoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SelecAlmacenCompletedEventHandler(object sender, SelecAlmacenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelecAlmacenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SelecAlmacenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarPedidoClienteCompletedEventHandler(object sender, GenerarPedidoClienteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarPedidoClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GenerarPedidoClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovPesajeCompletedEventHandler(object sender, GenerarMovPesajeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerarMovPesajeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GenerarMovPesajeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ActualizarMovProdPesajeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void EliminarMovProdPesajeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RegistrarPedidoVentaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RechazarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ACosturaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AOxidoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetAlmacenPorClienteCompletedEventHandler(object sender, GetAlmacenPorClienteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlmacenPorClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAlmacenPorClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetAlmacenPorTipoCompletedEventHandler(object sender, GetAlmacenPorTipoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlmacenPorTipoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAlmacenPorTipoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetInternalCustomerCompletedEventHandler(object sender, GetInternalCustomerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInternalCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetInternalCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetNumMovGeneradoCompletedEventHandler(object sender, GetNumMovGeneradoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumMovGeneradoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetNumMovGeneradoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void EliminarEtiquetaProcesadaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void InsertarRegistroEtiquetaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ObtenerCorrelativoCompletedEventHandler(object sender, ObtenerCorrelativoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerCorrelativoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ObtenerCorrelativoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AjusteProductoAlmacenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenRegMovSubcontrCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SalidaCosturaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AlmacenClientePresenteCompletedEventHandler(object sender, AlmacenClientePresenteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlmacenClientePresenteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AlmacenClientePresenteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        /// <remarks/>
        public string almAjuste
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }

        /// <remarks/>
        public int tipoAjuste
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeOxidoACosturaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void EmpresaClienteCompletedEventHandler(object sender, EmpresaClienteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmpresaClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal EmpresaClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GenerarMovUniformidadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}